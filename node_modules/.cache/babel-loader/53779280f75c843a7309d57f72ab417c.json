{"ast":null,"code":"var _jsxFileName = \"D:\\\\CLSFYclone\\\\CLSFY\\\\src\\\\components\\\\scores_and_stats\\\\ScoresAndStats.js\";\nimport React from 'react';\nimport Rating from './Rating';\nimport Container from '@mui/material/Container';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ScoresAndStats({\n  report\n}) {\n  var _report$accuracy;\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    fixed: true,\n    sx: {\n      width: \"90%\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"nobr\", {\n      style: {\n        fontSize: '1.75rem'\n      },\n      children: \"Model accuracy  \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Rating, {\n      value: report['accuracy'] ? report['accuracy'] * 5 : 0\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 17\n    }, this), \" \", ' ', /*#__PURE__*/_jsxDEV(\"nobr\", {\n      style: {\n        fontSize: '0.75rem',\n        verticalAlign: 'middle'\n      },\n      children: [\"(\", (_report$accuracy = report['accuracy']) !== null && _report$accuracy !== void 0 ? _report$accuracy : '0', \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        fontSize: '0.75rem'\n      },\n      children: \"* Accuracy may vary from classification to classification.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 17\n    }, this), \"Classes Scores: \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 33\n    }, this), report['classes_scores'] ? report['classes_scores'].map((classScore, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: classScore\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 97\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 91\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 133\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 73\n    }, this)) : null, /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        fontSize: '0.75rem'\n      },\n      children: [\"* In case of class with low score \", ' ->', \" more data of this label needed.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 17\n    }, this), \"5 Best Feature Labels: |\", ' ', report['best_features_labels'] ? report['best_features_labels'].map((featureLabel, index) => /*#__PURE__*/_jsxDEV(\"nobr\", {\n      children: [featureLabel, ' | ']\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 81\n    }, this)) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n}\n\n_c = ScoresAndStats;\nexport default ScoresAndStats;\n\nvar _c;\n\n$RefreshReg$(_c, \"ScoresAndStats\");","map":{"version":3,"sources":["D:/CLSFYclone/CLSFY/src/components/scores_and_stats/ScoresAndStats.js"],"names":["React","Rating","Container","ScoresAndStats","report","width","fontSize","verticalAlign","map","classScore","index","featureLabel"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;;;AAEA,SAASC,cAAT,CAAwB;AAACC,EAAAA;AAAD,CAAxB,EAAkC;AAAA;;AAC9B,sBACI,QAAC,SAAD;AAAW,IAAA,KAAK,MAAhB;AAAiB,IAAA,EAAE,EAAE;AAACC,MAAAA,KAAK,EAAE;AAAR,KAArB;AAAA,4BACQ;AAAM,MAAA,KAAK,EAAE;AAACC,QAAAA,QAAQ,EAAE;AAAX,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADR,eAEQ,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAEF,MAAM,CAAC,UAAD,CAAN,GAAqBA,MAAM,CAAC,UAAD,CAAN,GAAqB,CAA1C,GAA+C;AAA9D;AAAA;AAAA;AAAA;AAAA,YAFR,OAE4E,GAF5E,eAGQ;AAAM,MAAA,KAAK,EAAE;AAACE,QAAAA,QAAQ,EAAE,SAAX;AAAsBC,QAAAA,aAAa,EAAE;AAArC,OAAb;AAAA,0CAA+DH,MAAM,CAAC,UAAD,CAArE,+DAAoF,GAApF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHR,eAIQ;AAAG,MAAA,KAAK,EAAE;AAACE,QAAAA,QAAQ,EAAE;AAAX,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJR,eAKQ;AAAA;AAAA;AAAA;AAAA,YALR,mCAMwB;AAAA;AAAA;AAAA;AAAA,YANxB,EAOSF,MAAM,CAAC,gBAAD,CAAN,GACGA,MAAM,CAAC,gBAAD,CAAN,CAAyBI,GAAzB,CAA6B,CAACC,UAAD,EAAaC,KAAb,kBAAuB;AAAA,8BAAkB;AAAA,+BAAM;AAAA,oBAASD;AAAT;AAAA;AAAA;AAAA;AAAA;AAAN;AAAA;AAAA;AAAA;AAAA,cAAlB,eAA4D;AAAA;AAAA;AAAA;AAAA,cAA5D;AAAA,OAAWC,KAAX;AAAA;AAAA;AAAA;AAAA,YAApD,CADH,GAEC,IATV,eAUQ;AAAG,MAAA,KAAK,EAAE;AAACJ,QAAAA,QAAQ,EAAE;AAAX,OAAV;AAAA,uDAAoE,KAApE;AAAA;AAAA;AAAA;AAAA;AAAA,YAVR,eAWQ;AAAA;AAAA;AAAA;AAAA,YAXR,8BAYiC,GAZjC,EAaSF,MAAM,CAAC,sBAAD,CAAN,GACGA,MAAM,CAAC,sBAAD,CAAN,CAA+BI,GAA/B,CAAmC,CAACG,YAAD,EAAeD,KAAf,kBAAyB;AAAA,iBAAmBC,YAAnB,EAAiC,KAAjC;AAAA,OAAWD,KAAX;AAAA;AAAA;AAAA;AAAA,YAA5D,CADH,GAEC,IAfV;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAmBH;;KApBQP,c;AAsBT,eAAeA,cAAf","sourcesContent":["import React from 'react'\r\nimport Rating from './Rating'\r\nimport Container from '@mui/material/Container';\r\n\r\nfunction ScoresAndStats({report}) {\r\n    return (\r\n        <Container fixed sx={{width: \"90%\"}}>\r\n                <nobr style={{fontSize: '1.75rem'}}>Model accuracy  </nobr>\r\n                <Rating value={report['accuracy']? (report['accuracy'] * 5) : 0}/> {' '}\r\n                <nobr style={{fontSize: '0.75rem', verticalAlign: 'middle'}}>({report['accuracy']?? '0'})</nobr>\r\n                <p style={{fontSize: '0.75rem'}}>* Accuracy may vary from classification to classification.</p>\r\n                <hr/>\r\n                Classes Scores: <br/>\r\n                {report['classes_scores']? \r\n                    report['classes_scores'].map((classScore, index) => <span key={index}><span><strong>{classScore}</strong></span><br/></span>)\r\n                : null}\r\n                <p style={{fontSize: '0.75rem'}}>* In case of class with low score {' ->'} more data of this label needed.</p>\r\n                <hr/>\r\n                5 Best Feature Labels: |{' '}\r\n                {report['best_features_labels']? \r\n                    report['best_features_labels'].map((featureLabel, index) => <nobr key={index}>{featureLabel}{' | '}</nobr>)\r\n                : null}\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default ScoresAndStats\r\n"]},"metadata":{},"sourceType":"module"}