{"ast":null,"code":"var _jsxFileName = \"D:\\\\CLSFY\\\\src\\\\components\\\\handle_data_to_predict\\\\HandleFeaturesDataToPredict.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport Grid from '@mui/material/Grid';\nimport Container from '@mui/material/Container';\nimport FormControl from '@mui/material/FormControl';\nimport Form from 'react-bootstrap/Form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst HandleFeaturesDataToPredict = ({\n  features,\n  onSubmit\n}) => {\n  _s();\n\n  const [featuersValuesDict, setFeatuersValuesDict] = useState({}); //const [textValueMessage, setTextValueMessage] = useState(\"\")\n  //const [textValueError, setTextValueError] = useState(false)\n\n  const handleSubmit = e => {\n    console.log(e);\n  };\n\n  const handleTextFieldClick = e => {\n    let featureTextChanged = e.target.labels[0].childNodes[0].data;\n    console.log(featureTextChanged);\n    featuersValuesDict[featureTextChanged] = e.target.value; //{currFeatureChanged: featureChanged}\n\n    console.log(featuersValuesDict);\n  };\n\n  return (\n    /*#__PURE__*/\n    //<Container maxWidth='md' sx={{width: \"90%\"}}>\n    _jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(FormControl, {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 0,\n          children: features.map((feature, index) => /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 2,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                label: feature,\n                onChange: handleTextFieldClick\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 35,\n                columnNumber: 29\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 25\n            }, this)\n          }, void 0, false))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          children: \"click\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this)\n  );\n};\n\n_s(HandleFeaturesDataToPredict, \"aq7uE1KQSCOKy3lJhibi7+GVze0=\");\n\n_c = HandleFeaturesDataToPredict;\nexport default HandleFeaturesDataToPredict;\n\nvar _c;\n\n$RefreshReg$(_c, \"HandleFeaturesDataToPredict\");","map":{"version":3,"sources":["D:/CLSFY/src/components/handle_data_to_predict/HandleFeaturesDataToPredict.js"],"names":["React","useState","Button","Box","TextField","Grid","Container","FormControl","Form","HandleFeaturesDataToPredict","features","onSubmit","featuersValuesDict","setFeatuersValuesDict","handleSubmit","e","console","log","handleTextFieldClick","featureTextChanged","target","labels","childNodes","data","value","map","feature","index"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;;;;AAEA,MAAMC,2BAA2B,GAAG,CAAC;AAACC,EAAAA,QAAD;AAAWC,EAAAA;AAAX,CAAD,KAA0B;AAAA;;AAC1D,QAAM,CAACC,kBAAD,EAAqBC,qBAArB,IAA8CZ,QAAQ,CAAC,EAAD,CAA5D,CAD0D,CAE1D;AACA;;AAEA,QAAMa,YAAY,GAAGC,CAAC,IAAI;AACtBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACH,GAFD;;AAIA,QAAMG,oBAAoB,GAAGH,CAAC,IAAI;AAC9B,QAAII,kBAAkB,GAAGJ,CAAC,CAACK,MAAF,CAASC,MAAT,CAAgB,CAAhB,EAAmBC,UAAnB,CAA8B,CAA9B,EAAiCC,IAA1D;AACAP,IAAAA,OAAO,CAACC,GAAR,CAAYE,kBAAZ;AACAP,IAAAA,kBAAkB,CAACO,kBAAD,CAAlB,GAAyCJ,CAAC,CAACK,MAAF,CAASI,KAAlD,CAH8B,CAI9B;;AACAR,IAAAA,OAAO,CAACC,GAAR,CAAYL,kBAAZ;AACH,GAND;;AAQA;AAAA;AACI;AACA,YAAC,SAAD;AAAA,6BACI,QAAC,WAAD;AAAa,QAAA,QAAQ,EAAEE,YAAvB;AAAA,gCACI,QAAC,IAAD;AAAM,UAAA,SAAS,MAAf;AAAgB,UAAA,OAAO,EAAE,CAAzB;AAAA,oBACKJ,QAAQ,CAACe,GAAT,CAAa,CAACC,OAAD,EAAUC,KAAV,kBACd;AAAA,mCACI,QAAC,IAAD;AAAkB,cAAA,IAAI,MAAtB;AAAuB,cAAA,EAAE,EAAE,CAA3B;AAAA,qCACI,QAAC,SAAD;AAEI,gBAAA,KAAK,EAAED,OAFX;AAGI,gBAAA,QAAQ,EAAER;AAHd,iBACSS,KADT;AAAA;AAAA;AAAA;AAAA;AADJ,eAAWA,KAAX;AAAA;AAAA;AAAA;AAAA;AADJ,2BADC;AADL;AAAA;AAAA;AAAA;AAAA,gBADJ,eAcI,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAdJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AAFJ;AAqBH,CAtCD;;GAAMlB,2B;;KAAAA,2B;AAwCN,eAAeA,2BAAf","sourcesContent":["import React, { useState } from 'react'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Box from '@mui/material/Box';\r\nimport TextField from '@mui/material/TextField';\r\nimport Grid from '@mui/material/Grid';\r\nimport Container from '@mui/material/Container';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Form from 'react-bootstrap/Form'\r\n\r\nconst HandleFeaturesDataToPredict = ({features, onSubmit}) => {\r\n    const [featuersValuesDict, setFeatuersValuesDict] = useState({})\r\n    //const [textValueMessage, setTextValueMessage] = useState(\"\")\r\n    //const [textValueError, setTextValueError] = useState(false)\r\n\r\n    const handleSubmit = e => {\r\n        console.log(e)\r\n    }\r\n\r\n    const handleTextFieldClick = e => {\r\n        let featureTextChanged = e.target.labels[0].childNodes[0].data;\r\n        console.log(featureTextChanged)\r\n        featuersValuesDict[featureTextChanged] = e.target.value\r\n        //{currFeatureChanged: featureChanged}\r\n        console.log(featuersValuesDict)\r\n    }\r\n\r\n    return (\r\n        //<Container maxWidth='md' sx={{width: \"90%\"}}>\r\n        <Container>\r\n            <FormControl onSubmit={handleSubmit}>\r\n                <Grid container spacing={0}>\r\n                    {features.map((feature, index) => \r\n                    <>\r\n                        <Grid key={index} item xs={2}>\r\n                            <TextField \r\n                                key={index} \r\n                                label={feature}\r\n                                onChange={handleTextFieldClick}/>\r\n                        </Grid>\r\n                    </>\r\n                    )}\r\n                </Grid>\r\n\r\n                <Button type=\"submit\">click</Button>\r\n            </FormControl>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default HandleFeaturesDataToPredict"]},"metadata":{},"sourceType":"module"}