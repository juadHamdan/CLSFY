{"ast":null,"code":"var _jsxFileName = \"D:\\\\CLSFY\\\\src\\\\components\\\\file_handling\\\\HandleFile.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from 'react';\nimport AppSwitch from './AppSwitch';\nimport UploadFile from './UploadFile';\nimport ExampleButton from '../show_example/ExampleButton';\nimport AppTableModal from '../show_example/AppTableModal';\nimport Container from '@mui/material/Container';\nimport Button from '@mui/material/Button';\nimport Fab from '@mui/material/Fab';\nimport InfoRoundedIcon from '@mui/icons-material/InfoRounded';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst HandleFile = ({\n  handleFileSubmit,\n  handleSwitch,\n  Text,\n  Features,\n  classifyingType,\n  firstColor,\n  secondColor,\n  themeColor\n}) => {\n  _s();\n\n  const [showTextModalTable, setShowTextModalTable] = React.useState(false);\n  const [showFeaturesModalTable, setShowFeaturesModalTable] = React.useState(false);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"md\",\n    sx: {\n      width: \"90%\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        fontFamily: \"Calibri light\",\n        fontSize: \"1.5rem\",\n        color: \"#bdbdbd\",\n        paddingLeft: \"0.5rem\",\n        textDecoration: \"underline\"\n      },\n      children: \"Choose Classifyier Type\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AppSwitch, {\n      leftSwitchText: Text,\n      rightSwitchText: Features,\n      onSwitch: handleSwitch,\n      firstColor: firstColor,\n      secondColor: secondColor\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: themeColor,\n        fontSize: '1.3rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), \"Upload Excel file is in the following format:\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), classifyingType === Features ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [\"Features (Numbers) | Class (Numbers or Strings)\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(ExampleButton, {\n          tableTitle: \"File upload example for features classification\",\n          tableFeatures: [\"Feature 1\", \"Feature 2\", \"Feature 3\", \"...\", \"Class\"],\n          tableItems: [[\"0\", \"1\", \"0\", \"...\", \"0\"]]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [\"Text (Numbers) | Class (Numbers or Strings)\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(ExampleButton, {\n          tableTitle: \"File upload example for text classification\",\n          tableFeatures: [\"Text\", \"Class\"],\n          tableItems: [[\"text1\", \"class1\"]]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(UploadFile, {\n        url: classifyingType === \"Text\" ? '/classifyText/1' : 'classifyFeatures/1',\n        onSubmit: handleFileSubmit,\n        successMessage: \"Model trained successfully\",\n        awaitMessage: \"File uploaded, Training model...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n};\n\n_s(HandleFile, \"d6juhhJ/6eaUYBxZhFTB1G3eSHs=\");\n\n_c = HandleFile;\nexport default HandleFile;\n\nvar _c;\n\n$RefreshReg$(_c, \"HandleFile\");","map":{"version":3,"sources":["D:/CLSFY/src/components/file_handling/HandleFile.js"],"names":["React","useState","AppSwitch","UploadFile","ExampleButton","AppTableModal","Container","Button","Fab","InfoRoundedIcon","HandleFile","handleFileSubmit","handleSwitch","Text","Features","classifyingType","firstColor","secondColor","themeColor","showTextModalTable","setShowTextModalTable","showFeaturesModalTable","setShowFeaturesModalTable","width","fontFamily","fontSize","color","paddingLeft","textDecoration"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { useState } from 'react'\r\nimport AppSwitch from'./AppSwitch'\r\nimport UploadFile from './UploadFile'\r\nimport ExampleButton from '../show_example/ExampleButton'\r\nimport AppTableModal from '../show_example/AppTableModal'\r\nimport Container from '@mui/material/Container';\r\nimport Button from '@mui/material/Button';\r\nimport Fab from '@mui/material/Fab';\r\nimport InfoRoundedIcon from '@mui/icons-material/InfoRounded';\r\n\r\nconst HandleFile = ({handleFileSubmit, handleSwitch, Text, Features, classifyingType, firstColor, secondColor, themeColor}) => {\r\n    const [showTextModalTable, setShowTextModalTable] = React.useState(false)\r\n    const [showFeaturesModalTable, setShowFeaturesModalTable] = React.useState(false)\r\n\r\n    return (\r\n        <Container maxWidth='md' sx={{width: \"90%\"}}>\r\n            <p style={{fontFamily: \"Calibri light\", fontSize: \"1.5rem\", color: \"#bdbdbd\", paddingLeft: \"0.5rem\", textDecoration: \"underline\"}}>\r\n                Choose Classifyier Type\r\n            </p>\r\n            <AppSwitch \r\n                leftSwitchText={Text}\r\n                rightSwitchText={Features}\r\n                onSwitch={handleSwitch}\r\n                firstColor={firstColor}\r\n                secondColor={secondColor}\r\n            />\r\n            \r\n            <div style={{color: themeColor, fontSize: '1.3rem'}}>\r\n                <hr/>\r\n                Upload Excel file is in the following format:\r\n                <br/>\r\n                {classifyingType === Features?\r\n                <>\r\n                    Features (Numbers) | Class (Numbers or Strings)\r\n                    <br/><br/>\r\n\r\n                    <ExampleButton\r\n                        tableTitle={\"File upload example for features classification\"}\r\n                        tableFeatures={[\"Feature 1\", \"Feature 2\", \"Feature 3\" , \"...\", \"Class\"]} \r\n                        tableItems={[[\"0\", \"1\", \"0\", \"...\", \"0\"]]}\r\n                    />\r\n                </>\r\n                :\r\n                <>\r\n                    Text (Numbers) | Class (Numbers or Strings)\r\n                    <br/><br/>\r\n                    <ExampleButton\r\n                        tableTitle={\"File upload example for text classification\"}\r\n                        tableFeatures={[\"Text\", \"Class\"]} \r\n                        tableItems={[[\"text1\", \"class1\"]]}\r\n                    />\r\n                </>\r\n                }   \r\n                <hr/>\r\n                <UploadFile \r\n                    url={classifyingType === \"Text\" ? '/classifyText/1' : 'classifyFeatures/1'}\r\n                    onSubmit={handleFileSubmit}\r\n                    successMessage={\"Model trained successfully\"}\r\n                    awaitMessage={\"File uploaded, Training model...\"}\r\n                />\r\n            </div>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default HandleFile\r\n"]},"metadata":{},"sourceType":"module"}