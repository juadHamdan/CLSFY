{"ast":null,"code":"var _jsxFileName = \"D:\\\\CLSFY\\\\src\\\\components\\\\AppBar.js\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport { useState } from 'react';\nimport Login from './Login';\nimport Logout from './Logout';\nimport AppBar from '@mui/material/AppBar';\nimport { styled } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\nimport Menu from '@mui/material/Menu';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport Container from '@mui/material/Container';\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport Tooltip from '@mui/material/Tooltip';\nimport MenuItem from '@mui/material/MenuItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Start = 'Get Started';\nconst pages = [Start, 'Products', 'Pricing', 'Blog'];\nconst settings = ['Profile', 'Account', 'Dashboard', 'Logout'];\n\nconst AppNavBar = ({\n  handleStartClick,\n  handleLogin,\n  handleLogout\n}) => {\n  _s();\n\n  const [showLoginModal, setShowLoginModal] = useState(false);\n  const [showLogoutModal, setShowLogoutModal] = useState(false);\n  const [anchorElNav, setAnchorElNav] = useState(null);\n  const [anchorElUser, setAnchorElUser] = useState(null);\n\n  const handleOpenNavMenu = event => {\n    setAnchorElNav(event.currentTarget);\n  };\n\n  const handleCloseNavMenu = () => {\n    setAnchorElNav(null);\n  };\n\n  const handleOpenUserMenu = event => {\n    setAnchorElUser(event.currentTarget);\n  };\n\n  const handleCloseUserMenu = () => {\n    setAnchorElUser(null);\n  };\n\n  const onLoginSuccess = () => {\n    setShowLoginModal(false);\n  };\n\n  const handleItemClick = event => {\n    console.log(event.target.innerText);\n    if (event.target.innerText.toLowerCase() === Start.toLowerCase()) handleStartClick();\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(AppBar, {\n      position: \"fixed\",\n      style: {\n        color: \"black\",\n        backgroundColor: \"white\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(Toolbar, {\n          disableGutters: true,\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              flexGrow: 1,\n              display: {\n                xs: 'flex',\n                md: 'none'\n              }\n            },\n            children: [/*#__PURE__*/_jsxDEV(IconButton, {\n              size: \"large\",\n              \"aria-label\": \"account of current user\",\n              \"aria-controls\": \"menu-appbar\",\n              \"aria-haspopup\": \"true\",\n              onClick: handleOpenNavMenu,\n              color: \"inherit\",\n              children: /*#__PURE__*/_jsxDEV(MenuIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Menu, {\n              id: \"menu-appbar\",\n              anchorEl: anchorElNav,\n              anchorOrigin: {\n                vertical: 'bottom',\n                horizontal: 'left'\n              },\n              keepMounted: true,\n              transformOrigin: {\n                vertical: 'top',\n                horizontal: 'left'\n              },\n              open: Boolean(anchorElNav),\n              onClose: handleCloseNavMenu,\n              sx: {\n                display: {\n                  xs: 'block',\n                  md: 'none'\n                }\n              },\n              children: [pages.map(page => /*#__PURE__*/_jsxDEV(MenuItem, {\n                onClick: handleItemClick,\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"button\",\n                  display: \"block\",\n                  gutterBottom: true,\n                  textAlign: \"center\",\n                  children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: page\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 96,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 25\n                }, this)\n              }, page, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 25\n              }, this)), /*#__PURE__*/_jsxDEV(Login, {\n                show: showLoginModal,\n                onHide: () => setShowLoginModal(false),\n                onLogin: handleLogin,\n                onLoginSuccess: onLoginSuccess\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Logout, {\n                show: showLogoutModal,\n                onHide: () => setShowLogoutModal(false),\n                onLogoutSuccess: handleLogout\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              flexGrow: 1,\n              display: {\n                xs: 'flex',\n                md: 'none'\n              }\n            },\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                onClick: () => window.scroll(0, 0),\n                src: \"img/CLSFYlogo.png\",\n                alt: \"logo\",\n                height: \"90rem\",\n                width: \"160rem\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              paddingLeft: \"10rem\",\n              flexGrow: 1,\n              display: {\n                xs: 'none',\n                md: 'flex'\n              }\n            },\n            children: pages.map(page => /*#__PURE__*/_jsxDEV(Button, {\n              onClick: handleItemClick,\n              sx: {\n                fontSize: \"0.8rem\",\n                paddingLeft: \"2rem\",\n                paddingRight: \"2rem\",\n                my: 4,\n                color: 'black',\n                display: 'block'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: page\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 25\n              }, this)\n            }, page, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              flexGrow: 0\n            },\n            children: /*#__PURE__*/_jsxDEV(Menu, {\n              sx: {\n                mt: '45px'\n              },\n              id: \"menu-appbar\",\n              anchorEl: anchorElUser,\n              anchorOrigin: {\n                vertical: 'top',\n                horizontal: 'right'\n              },\n              keepMounted: true,\n              transformOrigin: {\n                vertical: 'top',\n                horizontal: 'right'\n              },\n              open: Boolean(anchorElUser),\n              onClose: handleCloseUserMenu,\n              children: settings.map(setting => /*#__PURE__*/_jsxDEV(MenuItem, {\n                onClick: handleCloseNavMenu,\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  textAlign: \"center\",\n                  children: setting\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 155,\n                  columnNumber: 25\n                }, this)\n              }, setting, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 25\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(AppNavBar, \"9ADE3MLY2pipHgR7aX1QBDr6qv0=\");\n\n_c = AppNavBar;\nexport default AppNavBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"AppNavBar\");","map":{"version":3,"sources":["D:/CLSFY/src/components/AppBar.js"],"names":["React","useState","Login","Logout","AppBar","styled","Box","Toolbar","IconButton","Typography","Menu","MenuIcon","Container","Avatar","Button","Tooltip","MenuItem","Start","pages","settings","AppNavBar","handleStartClick","handleLogin","handleLogout","showLoginModal","setShowLoginModal","showLogoutModal","setShowLogoutModal","anchorElNav","setAnchorElNav","anchorElUser","setAnchorElUser","handleOpenNavMenu","event","currentTarget","handleCloseNavMenu","handleOpenUserMenu","handleCloseUserMenu","onLoginSuccess","handleItemClick","console","log","target","innerText","toLowerCase","color","backgroundColor","flexGrow","display","xs","md","vertical","horizontal","Boolean","map","page","window","scroll","paddingLeft","fontSize","paddingRight","my","mt","setting"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport { useState } from 'react';\r\nimport Login from './Login'\r\nimport Logout from './Logout'\r\nimport AppBar from '@mui/material/AppBar';\r\nimport { styled } from '@mui/material/styles';\r\nimport Box from '@mui/material/Box';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Typography from '@mui/material/Typography';\r\nimport Menu from '@mui/material/Menu';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport Container from '@mui/material/Container';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Button from '@mui/material/Button';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport MenuItem from '@mui/material/MenuItem';\r\n\r\nconst Start = 'Get Started'\r\n\r\nconst pages = [Start, 'Products', 'Pricing', 'Blog'];\r\nconst settings = ['Profile', 'Account', 'Dashboard', 'Logout'];\r\n\r\nconst AppNavBar = ({handleStartClick, handleLogin, handleLogout}) => {\r\n    const [showLoginModal, setShowLoginModal] = useState(false);\r\n    const [showLogoutModal, setShowLogoutModal] = useState(false);\r\n    const [anchorElNav, setAnchorElNav] = useState(null);\r\n    const [anchorElUser, setAnchorElUser] = useState(null);\r\n\r\n    const handleOpenNavMenu = (event) => {\r\n    setAnchorElNav(event.currentTarget);\r\n    };\r\n    const handleCloseNavMenu = () => {\r\n    setAnchorElNav(null);\r\n    };\r\n\r\n    const handleOpenUserMenu = (event) => {\r\n    setAnchorElUser(event.currentTarget);\r\n    };\r\n\r\n    const handleCloseUserMenu = () => {\r\n    setAnchorElUser(null);\r\n    };\r\n\r\n    const onLoginSuccess = () => {\r\n    setShowLoginModal(false)\r\n    }\r\n\r\n\r\n  const handleItemClick = (event) => {\r\n    console.log(event.target.innerText)\r\n    if(event.target.innerText.toLowerCase() === Start.toLowerCase())\r\n        handleStartClick();\r\n  };\r\n\r\n\r\n\r\n\r\n  return (\r\n      <>\r\n        <AppBar position=\"fixed\" style={{color: \"black\", backgroundColor: \"white\"}}>\r\n            <Container>\r\n                <Toolbar disableGutters>\r\n                <Box sx={{ flexGrow: 1, display: { xs: 'flex', md: 'none' } }}>\r\n                    <IconButton\r\n                    size=\"large\"\r\n                    aria-label=\"account of current user\"\r\n                    aria-controls=\"menu-appbar\"\r\n                    aria-haspopup=\"true\"\r\n                    onClick={handleOpenNavMenu}\r\n                    color=\"inherit\"\r\n                    >\r\n                    <MenuIcon/>\r\n                    </IconButton>\r\n                    <Menu\r\n                    id=\"menu-appbar\"\r\n                    anchorEl={anchorElNav}\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'left',\r\n                    }}\r\n                    keepMounted\r\n                    transformOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'left',\r\n                    }}\r\n                    open={Boolean(anchorElNav)}\r\n                    onClose={handleCloseNavMenu}\r\n                    sx={{\r\n                        display: { xs: 'block', md: 'none' },\r\n                    }}\r\n                    >\r\n                    {pages.map((page) => (\r\n                        <MenuItem key={page} onClick={handleItemClick}>\r\n                        <Typography variant=\"button\" display=\"block\" gutterBottom textAlign=\"center\">\r\n                            <strong>{page}</strong>\r\n                        </Typography>\r\n                        </MenuItem>\r\n                    ))}\r\n\r\n                    <Login \r\n                        show={showLoginModal} \r\n                        onHide={() => setShowLoginModal(false)}\r\n                        onLogin={handleLogin}\r\n                        onLoginSuccess={onLoginSuccess}\r\n                    />\r\n                    <Logout \r\n                        show={showLogoutModal} \r\n                        onHide={() => setShowLogoutModal(false)}\r\n                        onLogoutSuccess={handleLogout}\r\n                    />\r\n\r\n\r\n                    </Menu>\r\n                </Box>\r\n\r\n                <div style={{ flexGrow: 1, display: { xs: 'flex', md: 'none' } }}>\r\n                    <Button>\r\n                        <img onClick={() => window.scroll(0, 0)} src=\"img/CLSFYlogo.png\" alt=\"logo\" height=\"90rem\" width=\"160rem\"/>\r\n                    </Button>\r\n                </div>\r\n\r\n\r\n                <Box sx={{ paddingLeft: \"10rem\", flexGrow: 1, display: { xs: 'none', md: 'flex' } }}>\r\n                    {pages.map((page) => (\r\n                    <Button\r\n                        key={page}\r\n                        onClick={handleItemClick}\r\n                        sx={{ fontSize: \"0.8rem\", paddingLeft: \"2rem\", paddingRight: \"2rem\", my: 4, color: 'black', display: 'block' }}\r\n                    >\r\n                        <strong>{page}</strong>\r\n                    </Button>\r\n                    ))}\r\n                </Box>\r\n\r\n                <Box sx={{ flexGrow: 0 }}>\r\n                    <Menu\r\n                    sx={{ mt: '45px' }}\r\n                    id=\"menu-appbar\"\r\n                    anchorEl={anchorElUser}\r\n                    anchorOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'right',\r\n                    }}\r\n                    keepMounted\r\n                    transformOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'right',\r\n                    }}\r\n                    open={Boolean(anchorElUser)}\r\n                    onClose={handleCloseUserMenu}\r\n                    >\r\n                    {settings.map((setting) => (\r\n                        <MenuItem key={setting} onClick={handleCloseNavMenu}>\r\n                        <Typography textAlign=\"center\">{setting}</Typography>\r\n                        </MenuItem>\r\n                    ))}\r\n                    </Menu>\r\n                </Box>\r\n\r\n                </Toolbar>\r\n            </Container>\r\n        </AppBar>\r\n    </>\r\n  );\r\n};\r\nexport default AppNavBar;\r\n"]},"metadata":{},"sourceType":"module"}