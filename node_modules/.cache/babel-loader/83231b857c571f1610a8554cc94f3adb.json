{"ast":null,"code":"var _jsxFileName = \"D:\\\\CLSFY\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './App.css';\nimport { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport AppBar from './components/AppBar';\nimport About from './components/About';\nimport AppStepper from './components/AppStepper';\nimport HandleFile from './components/file_handling/HandleFile';\nimport ScoresAndStats from './components/scores_and_stats/ScoresAndStats';\nimport HandleDataToPredict from './components/handle_data_to_predict/HandleDataToPredict';\nimport Container from '@mui/material/Container';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Text = \"Text\";\nconst Features = \"Features\";\nconst firstColor = \"#ffcc80\";\nconst secondColor = \"#80cbc4\";\n\nconst scrollToRef = ref => ref.current.scrollIntoView({\n  behavior: 'smooth',\n  block: 'center'\n});\n\nfunction App() {\n  _s();\n\n  const [themeColor, setThemeColor] = useState(firstColor);\n  const [classifyingType, setClassifyingType] = useState(Text);\n  const [accuracy, setAccuracy] = useState(0);\n  const [user, setUser] = useState(null);\n  const [numOfFileFeatures, setNumOfFileFeatures] = useState(0);\n  const [mandatoryCourses, setMandatoryCourses] = useState(null);\n  const [electiveCourses, setElectiveCourses] = useState(null);\n  const [userHaveSchedulerData, setUserHaveSchedulerData] = useState(false);\n  const [publishedSchedulersData, setPublishedSchedulersData] = useState([]);\n  const [sharedSchedulersData, setSharedSchedulersData] = useState([]);\n  useEffect(async () => {\n    /*\n    const schedulersDataRes = await fetch('/schedulersData')\n    const schedulersData = await schedulersDataRes.json()\n    console.log(\"Home Page schedulers: \", Object.values(schedulersData))\n    setPublishedSchedulersData(Object.values(schedulersData))\n     const usersRes = await fetch('/getUsersInfo')\n    const usersData = await usersRes.json()\n    console.log(Object.values(usersData))\n    setUsers(Object.values(usersData))\n    */\n  }, []);\n\n  const checkUserCoursesExists = async uid => {\n    var url = '/checkUserCourses/' + uid;\n    const res = await fetch(url);\n\n    if (res.status === 200) //user database courses exists\n      {\n        console.log('User have courses.');\n        return true;\n      }\n\n    if (res.status === 400) {\n      return false;\n    }\n  };\n\n  const checkUserSchedulerDataExists = async uid => {\n    var url = '/checkUserScheduleData/' + uid;\n    const res = await fetch(url);\n\n    if (res.status === 200) //user database exists\n      {\n        console.log('User have scheduler data.');\n        return true;\n      } else {\n      return false;\n    }\n  };\n\n  const checkSharedSchedulersDataExists = async uid => {\n    var url = '/checkSharedScheduleData/' + uid;\n    const res = await fetch(url);\n\n    if (res.status === 200) //user database exists\n      {\n        console.log('Shared scheduler data to user.');\n        return true;\n      } else {\n      return false;\n    }\n  }; //fetch from user database courses\n\n\n  const fetchUserMandadtoryCourses = async uid => {\n    var url = '/mandatoryCourses/' + uid;\n    const res = await fetch(url);\n    const data = await res.json();\n    console.log(\"user mandatory courses: \", data.mandatoryCourses);\n    setMandatoryCourses(data.mandatoryCourses);\n  };\n\n  const fetchUserElectiveCourses = async uid => {\n    var url = '/electiveCourses/' + uid;\n    const res = await fetch(url);\n    const data = await res.json();\n    console.log(\"user elective courses: \", data.electiveCourses);\n    setElectiveCourses(data.electiveCourses);\n  };\n\n  const fetchSharedSchedulers = async uid => {\n    var url = '/sharedSchedulersData/' + uid;\n    const schedulersDataRes = await fetch(url);\n    const schedulersData = await schedulersDataRes.json();\n    console.log(\"shared schedulers2: \", Object.values(schedulersData));\n    setSharedSchedulersData(Object.values(schedulersData));\n  }; //fetch from newsletter database courses\n\n\n  const fetchMCourses = async () => {\n    const url = '/mandatoryCourses';\n    const res = await fetch(url);\n    const data = await res.json(); // init: adding needed fields to each object\n\n    const result = data.mandatoryCourses.map((v, index) => ({ ...v,\n      done: false,\n      id: index,\n      courseType: 'Mandatory'\n    }));\n    console.log(\"Mandatory Courses: \", result);\n    setMandatoryCourses(result);\n    return result;\n  };\n\n  const fetchECourses = async () => {\n    var url = '/electiveCourses';\n    const res = await fetch(url);\n    const data = await res.json(); //adding needed fields to each object\n\n    const result = data.electiveCourses.map((v, index) => ({ ...v,\n      done: false,\n      id: index,\n      courseType: 'Elective'\n    }));\n    console.log(\"Elective Courses: \", result);\n    setElectiveCourses(result);\n  };\n\n  const updateUserDatabase = async () => {\n    const url = '/updateUserDatabase/' + user.uid;\n    axios({\n      method: 'post',\n      url: url,\n      data: {\n        mandatoryCourses: {\n          mandatoryCourses\n        },\n        electiveCourses: {\n          electiveCourses\n        }\n      }\n    });\n  };\n  /*\n  const handleFileSubmit = async (formYear, formSemester) => {\n    //e.preventDefault()\n    year = formYear\n    semester = formSemester\n    var mandatoryCourses_ = await fetchMCourses()\n    await fetchECourses()\n    defaultCheckDoneCourses(mandatoryCourses_)\n    setShowKey('select')\n  }\n  */\n\n\n  const onLogin = async userFromLogin => {\n    const uid = userFromLogin.uid;\n    setUser(userFromLogin);\n    /*\n    const userHaveCourses = await checkUserCoursesExists(uid)\n    const userHaveSchedulerData_ = await checkUserSchedulerDataExists(uid)\n    const userHaveSharedSchedulersData_ = await checkSharedSchedulersDataExists(uid)\n    if(userHaveSharedSchedulersData_)\n      await fetchSharedSchedulers(uid)\n    if(userHaveSchedulerData_ && userHaveCourses)\n    {\n      await fetchUserMandadtoryCourses(uid)\n      await fetchUserElectiveCourses(uid)\n    }\n    else if(userHaveCourses)\n    {\n      await fetchUserMandadtoryCourses(uid)\n      await fetchUserElectiveCourses(uid)\n    }\n    */\n  };\n\n  const onLogout = () => {\n    console.log(\"LOGOUT\");\n    setUser(null);\n  };\n\n  const handleFileSubmit = async data => {\n    console.log(data);\n    setNumOfFileFeatures(data.numOfFileFeatures);\n    console.log(numOfFileFeatures);\n    /*\n    for (let key in data)\n    {\n      console.log(typeof data[key])\n      if(typeof data[key] === Object)\n        for (let innerKey in data[key])\n          console.log(data[key][innerKey])\n      else\n        console.log(key + \": \" + data[key])\n    }\n    setAccuracy(data['accuracy'])\n    console.log(\"Submitted file\")\n    */\n  };\n\n  const handleSwitch = SwitchText => {\n    setClassifyingType(SwitchText);\n    if (themeColor === firstColor) setThemeColor(secondColor);else setThemeColor(firstColor);\n    console.log(SwitchText);\n  };\n\n  const startRef = useRef(null);\n\n  const executeUploadScroll = () => scrollToRef(startRef);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      fontFamily: 'Calibri'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      sx: {\n        width: \"90%\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(AppBar, {\n        user: user,\n        handleLogin: onLogin,\n        handleLogout: onLogout,\n        handleStartClick: executeUploadScroll\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 24\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(About, {\n        user: user\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"waves\",\n      role: \"presentation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-bottom\",\n      ref: startRef,\n      style: {\n        color: themeColor\n      },\n      children: [/*#__PURE__*/_jsxDEV(AppStepper, {\n        firstStepComponent: /*#__PURE__*/_jsxDEV(HandleFile, {\n          handleFileSubmit: handleFileSubmit,\n          handleSwitch: handleSwitch,\n          classifyingType: classifyingType,\n          themeColor: themeColor,\n          firstColor: firstColor,\n          secondColor: secondColor,\n          Text: Text,\n          Features: Features\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 15\n        }, this),\n        secondStepComponent: /*#__PURE__*/_jsxDEV(ScoresAndStats, {\n          accuracy: accuracy\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 15\n        }, this),\n        thirdStepComponent: /*#__PURE__*/_jsxDEV(HandleDataToPredict, {\n          classifyingType: classifyingType\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: 300\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 234,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"sYtYBV7zMerpeWq1xt9lWVEGsfU=\");\n\n_c = App;\nconst appStyle = {\n  backgroundColor: '#444',\n  color: 'white',\n  direction: 'rtl',\n  textAlign: 'right'\n};\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/CLSFY/src/App.js"],"names":["React","useState","useEffect","useRef","axios","AppBar","About","AppStepper","HandleFile","ScoresAndStats","HandleDataToPredict","Container","Text","Features","firstColor","secondColor","scrollToRef","ref","current","scrollIntoView","behavior","block","App","themeColor","setThemeColor","classifyingType","setClassifyingType","accuracy","setAccuracy","user","setUser","numOfFileFeatures","setNumOfFileFeatures","mandatoryCourses","setMandatoryCourses","electiveCourses","setElectiveCourses","userHaveSchedulerData","setUserHaveSchedulerData","publishedSchedulersData","setPublishedSchedulersData","sharedSchedulersData","setSharedSchedulersData","checkUserCoursesExists","uid","url","res","fetch","status","console","log","checkUserSchedulerDataExists","checkSharedSchedulersDataExists","fetchUserMandadtoryCourses","data","json","fetchUserElectiveCourses","fetchSharedSchedulers","schedulersDataRes","schedulersData","Object","values","fetchMCourses","result","map","v","index","done","id","courseType","fetchECourses","updateUserDatabase","method","onLogin","userFromLogin","onLogout","handleFileSubmit","handleSwitch","SwitchText","startRef","executeUploadScroll","fontFamily","width","color","height","appStyle","backgroundColor","direction","textAlign"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport { useState, useEffect, useRef } from 'react'\nimport axios from 'axios';\nimport AppBar from'./components/AppBar'\nimport About from'./components/About'\nimport AppStepper from'./components/AppStepper'\n\nimport HandleFile from'./components/file_handling/HandleFile'\nimport ScoresAndStats from'./components/scores_and_stats/ScoresAndStats'\nimport HandleDataToPredict from'./components/handle_data_to_predict/HandleDataToPredict'\n\nimport Container from '@mui/material/Container';\n\n\nconst Text = \"Text\"\nconst Features = \"Features\"\n\nconst firstColor = \"#ffcc80\"\nconst secondColor = \"#80cbc4\"\n\nconst scrollToRef = (ref) => ref.current.scrollIntoView({ behavior: 'smooth', block: 'center' })\n\nfunction App()\n{\n  const [themeColor, setThemeColor] = useState(firstColor)  \n  const [classifyingType, setClassifyingType] = useState(Text)\n  const [accuracy, setAccuracy] = useState(0)\n  const [user, setUser] = useState(null)\n  const [numOfFileFeatures, setNumOfFileFeatures] = useState(0)\n\n  const [mandatoryCourses, setMandatoryCourses] = useState(null)\n  const [electiveCourses, setElectiveCourses] = useState(null)\n  const [userHaveSchedulerData, setUserHaveSchedulerData] = useState(false)\n  const [publishedSchedulersData, setPublishedSchedulersData] = useState([])\n  const [sharedSchedulersData, setSharedSchedulersData] = useState([])\n\n\n  useEffect(async () => {\n    /*\n    const schedulersDataRes = await fetch('/schedulersData')\n    const schedulersData = await schedulersDataRes.json()\n    console.log(\"Home Page schedulers: \", Object.values(schedulersData))\n    setPublishedSchedulersData(Object.values(schedulersData))\n\n    const usersRes = await fetch('/getUsersInfo')\n    const usersData = await usersRes.json()\n    console.log(Object.values(usersData))\n    setUsers(Object.values(usersData))\n    */\n  }, []);\n\n  const checkUserCoursesExists = async (uid) => {\n    var url = '/checkUserCourses/' + uid\n    const res = await fetch(url)\n    if(res.status === 200) //user database courses exists\n    {\n      console.log('User have courses.')\n      return true\n    }\n    if(res.status === 400)\n    {\n      return false\n    }\n  }\n\n  const checkUserSchedulerDataExists = async (uid) => {\n    var url = '/checkUserScheduleData/' + uid\n    const res = await fetch(url)\n    if(res.status === 200) //user database exists\n    {\n      console.log('User have scheduler data.')\n      return true\n    }\n    else\n    {\n      return false\n    }\n  }\n\n  const checkSharedSchedulersDataExists = async (uid) => {\n    var url = '/checkSharedScheduleData/' + uid\n    const res = await fetch(url)\n    if(res.status === 200) //user database exists\n    {\n      console.log('Shared scheduler data to user.')\n      return true\n    }\n    else\n    {\n      return false\n    }\n  }\n\n  //fetch from user database courses\n  const fetchUserMandadtoryCourses = async (uid) => {\n    var url = '/mandatoryCourses/' + uid \n    const res = await fetch(url)\n    const data = await res.json()\n    console.log(\"user mandatory courses: \", data.mandatoryCourses)\n    setMandatoryCourses(data.mandatoryCourses)\n  }\n  const fetchUserElectiveCourses = async (uid) => {\n    var url = '/electiveCourses/' + uid \n    const res = await fetch(url)\n    const data = await res.json()\n    console.log(\"user elective courses: \", data.electiveCourses)\n    setElectiveCourses(data.electiveCourses)\n  }\n  const fetchSharedSchedulers = async (uid) => {\n    var url = '/sharedSchedulersData/' + uid \n    const schedulersDataRes = await fetch(url)\n    const schedulersData = await schedulersDataRes.json()\n    console.log(\"shared schedulers2: \", Object.values(schedulersData))\n    setSharedSchedulersData(Object.values(schedulersData))\n  }\n\n  //fetch from newsletter database courses\n  const fetchMCourses = async () => {\n    const url = '/mandatoryCourses'\n    const res = await fetch(url)\n    const data = await res.json()\n    // init: adding needed fields to each object\n    const result = data.mandatoryCourses.map((v, index) => ({...v,\n        done: false,\n        id: index,\n\t\t    courseType: 'Mandatory'\n    }));\n    console.log(\"Mandatory Courses: \", result)\n    setMandatoryCourses(result)\n    return result\n  }\n\n  const fetchECourses = async () => {\n    var url = '/electiveCourses'\n    const res = await fetch(url)\n    const data = await res.json()\n    //adding needed fields to each object\n    const result = data.electiveCourses.map((v, index) => ({...v,\n        done: false,\n        id: index,\n\t\t    courseType: 'Elective'\n    }));\n    console.log(\"Elective Courses: \", result)\n    setElectiveCourses(result)\n  }\n\n  const updateUserDatabase = async () => {\n    const url = '/updateUserDatabase/' + user.uid\n    axios({\n      method: 'post',\n      url: url,\n      data: {\n        mandatoryCourses: {mandatoryCourses},\n        electiveCourses: {electiveCourses}\n      }\n    });\n  }\n  /*\n  const handleFileSubmit = async (formYear, formSemester) => {\n    //e.preventDefault()\n    year = formYear\n    semester = formSemester\n    var mandatoryCourses_ = await fetchMCourses()\n    await fetchECourses()\n    defaultCheckDoneCourses(mandatoryCourses_)\n    setShowKey('select')\n  }\n  */\n\n  const onLogin = async (userFromLogin) => {\n    const uid = userFromLogin.uid\n    setUser(userFromLogin)\n\n    /*\n    const userHaveCourses = await checkUserCoursesExists(uid)\n    const userHaveSchedulerData_ = await checkUserSchedulerDataExists(uid)\n    const userHaveSharedSchedulersData_ = await checkSharedSchedulersDataExists(uid)\n    if(userHaveSharedSchedulersData_)\n      await fetchSharedSchedulers(uid)\n    if(userHaveSchedulerData_ && userHaveCourses)\n    {\n      await fetchUserMandadtoryCourses(uid)\n      await fetchUserElectiveCourses(uid)\n    }\n    else if(userHaveCourses)\n    {\n      await fetchUserMandadtoryCourses(uid)\n      await fetchUserElectiveCourses(uid)\n    }\n    */\n  }\n\n  const onLogout = () => {\n    console.log(\"LOGOUT\")\n    setUser(null)\n  }\n\n  const handleFileSubmit = async (data) => {\n    console.log(data)\n    setNumOfFileFeatures(data.numOfFileFeatures)\n    console.log(numOfFileFeatures)\n\n\n    /*\n    for (let key in data)\n    {\n      console.log(typeof data[key])\n      if(typeof data[key] === Object)\n        for (let innerKey in data[key])\n          console.log(data[key][innerKey])\n      else\n        console.log(key + \": \" + data[key])\n    }\n    setAccuracy(data['accuracy'])\n    console.log(\"Submitted file\")\n    */\n  }\n\n  const handleSwitch = (SwitchText) => {\n    setClassifyingType(SwitchText)\n    if(themeColor === firstColor)\n      setThemeColor(secondColor)\n    else\n      setThemeColor(firstColor)\n    console.log(SwitchText)\n  }\n\n  const startRef = useRef(null)\n  const executeUploadScroll = () => scrollToRef(startRef)\n\n\n  return ( \n    <div style={{fontFamily: 'Calibri'}}>\n      <Container sx={{width: \"90%\"}}>\n        <AppBar\n          user={user} \n          handleLogin={onLogin} \n          handleLogout={onLogout}\n          handleStartClick={executeUploadScroll}\n        />\n        <br/><br/><br/><br/><br/>\n        <About user={user}/>\n\n      </Container>\n\n        <div className=\"waves\" role=\"presentation\"></div>\n        <div className=\"content-bottom\" ref={startRef} style={{color: themeColor}}>\n\n\n          <AppStepper\n            firstStepComponent={\n              <HandleFile \n                handleFileSubmit={handleFileSubmit}\n                handleSwitch={handleSwitch}\n                classifyingType={classifyingType}\n                themeColor={themeColor}\n                firstColor={firstColor}\n                secondColor={secondColor}\n                Text={Text}\n                Features={Features}\n              />}\n            secondStepComponent={\n              <ScoresAndStats \n                accuracy={accuracy}\n              />}\n            thirdStepComponent={\n              <HandleDataToPredict \n                classifyingType={classifyingType}\n              />}\n          />\n          <div style={{ height: 300 }} />\n        </div>\n    </div>\n  );\n}\n\nconst appStyle = \n{\n  backgroundColor: '#444',\n  color: 'white',\n\tdirection: 'rtl',\n\ttextAlign: 'right',\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}