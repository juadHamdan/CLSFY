{"ast":null,"code":"var _jsxFileName = \"D:\\\\CLSFY\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './App.css';\nimport { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport AppBar from './components/AppBar';\nimport AppStepper from './components/AppStepper';\nimport Rating from './components/Rating';\nimport HandleFile from './components/file_handling/HandleFile';\nimport Container from '@mui/material/Container';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst adminMail = 'sadna2021mta@gmail.com'; //default values to degree year and semester\n\nlet year = 1;\nlet semester = 1;\n\nconst scrollToRef = ref => ref.current.scrollIntoView({\n  behavior: 'smooth',\n  block: 'center'\n});\n\nconst Text = \"Text\";\nconst Features = \"Features\";\nconst firstColor = \"#ffcc80\";\nconst secondColor = \"#80cbc4\";\n\nfunction App() {\n  _s();\n\n  const [classifyingType, setClassifyingType] = useState(Text);\n  const [accuracy, setAccuracy] = useState(0);\n  const [user, setUser] = useState(null);\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [themeColor, setThemeColor] = useState(firstColor);\n  const [showTextModalTable, setShowTextModalTable] = useState(false);\n  const [mandatoryCourses, setMandatoryCourses] = useState(null);\n  const [electiveCourses, setElectiveCourses] = useState(null);\n  const [userHaveSchedulerData, setUserHaveSchedulerData] = useState(false);\n  const [publishedSchedulersData, setPublishedSchedulersData] = useState([]);\n  const [sharedSchedulersData, setSharedSchedulersData] = useState([]);\n  const [users, setUsers] = useState(null);\n  const [showKey, setShowKey] = useState('home');\n  useEffect(async () => {\n    /*\n    const schedulersDataRes = await fetch('/schedulersData')\n    const schedulersData = await schedulersDataRes.json()\n    console.log(\"Home Page schedulers: \", Object.values(schedulersData))\n    setPublishedSchedulersData(Object.values(schedulersData))\n     const usersRes = await fetch('/getUsersInfo')\n    const usersData = await usersRes.json()\n    console.log(Object.values(usersData))\n    setUsers(Object.values(usersData))\n    */\n  }, []);\n\n  const checkUserCoursesExists = async uid => {\n    var url = '/checkUserCourses/' + uid;\n    const res = await fetch(url);\n\n    if (res.status === 200) //user database courses exists\n      {\n        console.log('User have courses.');\n        return true;\n      }\n\n    if (res.status === 400) {\n      return false;\n    }\n  };\n\n  const checkUserSchedulerDataExists = async uid => {\n    var url = '/checkUserScheduleData/' + uid;\n    const res = await fetch(url);\n\n    if (res.status === 200) //user database exists\n      {\n        console.log('User have scheduler data.');\n        return true;\n      } else {\n      return false;\n    }\n  };\n\n  const checkSharedSchedulersDataExists = async uid => {\n    var url = '/checkSharedScheduleData/' + uid;\n    const res = await fetch(url);\n\n    if (res.status === 200) //user database exists\n      {\n        console.log('Shared scheduler data to user.');\n        return true;\n      } else {\n      return false;\n    }\n  }; //fetch from user database courses\n\n\n  const fetchUserMandadtoryCourses = async uid => {\n    var url = '/mandatoryCourses/' + uid;\n    const res = await fetch(url);\n    const data = await res.json();\n    console.log(\"user mandatory courses: \", data.mandatoryCourses);\n    setMandatoryCourses(data.mandatoryCourses);\n  };\n\n  const fetchUserElectiveCourses = async uid => {\n    var url = '/electiveCourses/' + uid;\n    const res = await fetch(url);\n    const data = await res.json();\n    console.log(\"user elective courses: \", data.electiveCourses);\n    setElectiveCourses(data.electiveCourses);\n  };\n\n  const fetchSharedSchedulers = async uid => {\n    var url = '/sharedSchedulersData/' + uid;\n    const schedulersDataRes = await fetch(url);\n    const schedulersData = await schedulersDataRes.json();\n    console.log(\"shared schedulers2: \", Object.values(schedulersData));\n    setSharedSchedulersData(Object.values(schedulersData));\n  }; //fetch from newsletter database courses\n\n\n  const fetchMCourses = async () => {\n    const url = '/mandatoryCourses';\n    const res = await fetch(url);\n    const data = await res.json(); // init: adding needed fields to each object\n\n    const result = data.mandatoryCourses.map((v, index) => ({ ...v,\n      done: false,\n      id: index,\n      courseType: 'Mandatory'\n    }));\n    console.log(\"Mandatory Courses: \", result);\n    setMandatoryCourses(result);\n    return result;\n  };\n\n  const fetchECourses = async () => {\n    var url = '/electiveCourses';\n    const res = await fetch(url);\n    const data = await res.json(); //adding needed fields to each object\n\n    const result = data.electiveCourses.map((v, index) => ({ ...v,\n      done: false,\n      id: index,\n      courseType: 'Elective'\n    }));\n    console.log(\"Elective Courses: \", result);\n    setElectiveCourses(result);\n  };\n\n  const defaultCheckDoneCourses = courses => {\n    courses === null || courses === void 0 ? void 0 : courses.map(course => {\n      if (course.year < year || course.year == year && (course.semesters[0] < semester || course.semesters.length === 2)) {\n        courses[course.id].done = true;\n        console.log(course.title + \" done.\");\n      }\n    });\n  };\n\n  const checkMandatoryCourse = (e, id) => {\n    mandatoryCourses[id].done = !mandatoryCourses[id].done;\n    console.log(mandatoryCourses[id].title + \": \" + mandatoryCourses[id].done);\n  };\n\n  const checkElectiveCourse = (e, id) => {\n    electiveCourses[id].done = !electiveCourses[id].done;\n    console.log(electiveCourses[id].title + \": \" + electiveCourses[id].done);\n  };\n\n  const updateUserDatabase = async () => {\n    const url = '/updateUserDatabase/' + user.uid;\n    axios({\n      method: 'post',\n      url: url,\n      data: {\n        mandatoryCourses: {\n          mandatoryCourses\n        },\n        electiveCourses: {\n          electiveCourses\n        }\n      }\n    });\n  };\n  /*\n    const handleFileSubmit = async (formYear, formSemester) => {\n      //e.preventDefault()\n      year = formYear\n      semester = formSemester\n      var mandatoryCourses_ = await fetchMCourses()\n      await fetchECourses()\n      defaultCheckDoneCourses(mandatoryCourses_)\n      setShowKey('select')\n    }\n    */\n\n\n  const handleSelectCoursesSubmit = () => {\n    if (user != null) updateUserDatabase();\n    window.scrollTo(0, 0);\n    setShowKey('schedule');\n  };\n\n  const onLogin = async userFromLogin => {\n    const uid = userFromLogin.uid;\n    if (userFromLogin.email === adminMail) setIsAdmin(true);\n    setUser(userFromLogin);\n    const userHaveCourses = await checkUserCoursesExists(uid);\n    const userHaveSchedulerData_ = await checkUserSchedulerDataExists(uid);\n    const userHaveSharedSchedulersData_ = await checkSharedSchedulersDataExists(uid);\n    var KeyIsSet = false;\n\n    if (userHaveSharedSchedulersData_) {\n      setShowKey('share');\n      KeyIsSet = true;\n      await fetchSharedSchedulers(uid);\n    }\n\n    if (userHaveSchedulerData_ && userHaveCourses) {\n      if (!KeyIsSet) setShowKey('schedule');\n      setUserHaveSchedulerData(true);\n      await fetchUserMandadtoryCourses(uid);\n      await fetchUserElectiveCourses(uid);\n    } else if (userHaveCourses) {\n      if (!KeyIsSet) setShowKey('select');\n      await fetchUserMandadtoryCourses(uid);\n      await fetchUserElectiveCourses(uid);\n    } else if (!KeyIsSet) //user doesn't have any data\n      setShowKey('upload');\n  };\n\n  const onLogout = () => {\n    console.log(\"LOGOUT\");\n    setIsAdmin(false);\n    setUser(null);\n    setMandatoryCourses(null); // delete later\n\n    setElectiveCourses(null); // delete later\n\n    setShowKey('home'); // delete later\n  };\n\n  const handleFileSubmit = async accuracy => {\n    setAccuracy(accuracy);\n    console.log(\"Submitted file\");\n  };\n\n  const handleSwitch = SwitchText => {\n    setClassifyingType(SwitchText);\n    if (themeColor === firstColor) setThemeColor(secondColor);else setThemeColor(firstColor);\n    console.log(SwitchText);\n  };\n\n  const startRef = useRef(null);\n\n  const executeUploadScroll = () => scrollToRef(startRef);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      fontFamily: 'Calibri'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      sx: {\n        width: \"90%\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(AppBar, {\n        handleStartClick: executeUploadScroll\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 24\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"content-top\",\n        style: {\n          padding: \"5rem\",\n          textAlign: \"center\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \" CLSFY \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 11\n        }, this), \"Our goal is to make machine learning and artificial intelligence classifying algorithms accessible to the general public.\", /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 11\n        }, this), \"Login to save your trained model.\", /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 11\n        }, this), \"TODO: OnLogin, if have trained models, let user choose, open step3\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"waves\",\n      role: \"presentation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"content-bottom\",\n      ref: startRef,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: 300\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(AppStepper, {\n        firstStepComponent: /*#__PURE__*/_jsxDEV(HandleFile, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 33\n        }, this),\n        secondStepComponent: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Rating, {\n            value: accuracy * 5\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 17\n          }, this), \"Model accuracy = \", accuracy, /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 17\n          }, this), \"Add here comfusion matrix and all of the classes f1-scores.\"]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: 300\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 267,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"IRk0c45laPvX+YghT06KCaXa5kM=\");\n\n_c = App;\nconst appStyle = {\n  backgroundColor: '#444',\n  color: 'white',\n  direction: 'rtl',\n  textAlign: 'right'\n};\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/CLSFY/src/App.js"],"names":["React","useState","useEffect","useRef","axios","AppBar","AppStepper","Rating","HandleFile","Container","adminMail","year","semester","scrollToRef","ref","current","scrollIntoView","behavior","block","Text","Features","firstColor","secondColor","App","classifyingType","setClassifyingType","accuracy","setAccuracy","user","setUser","isAdmin","setIsAdmin","themeColor","setThemeColor","showTextModalTable","setShowTextModalTable","mandatoryCourses","setMandatoryCourses","electiveCourses","setElectiveCourses","userHaveSchedulerData","setUserHaveSchedulerData","publishedSchedulersData","setPublishedSchedulersData","sharedSchedulersData","setSharedSchedulersData","users","setUsers","showKey","setShowKey","checkUserCoursesExists","uid","url","res","fetch","status","console","log","checkUserSchedulerDataExists","checkSharedSchedulersDataExists","fetchUserMandadtoryCourses","data","json","fetchUserElectiveCourses","fetchSharedSchedulers","schedulersDataRes","schedulersData","Object","values","fetchMCourses","result","map","v","index","done","id","courseType","fetchECourses","defaultCheckDoneCourses","courses","course","semesters","length","title","checkMandatoryCourse","e","checkElectiveCourse","updateUserDatabase","method","handleSelectCoursesSubmit","window","scrollTo","onLogin","userFromLogin","email","userHaveCourses","userHaveSchedulerData_","userHaveSharedSchedulersData_","KeyIsSet","onLogout","handleFileSubmit","handleSwitch","SwitchText","startRef","executeUploadScroll","fontFamily","width","padding","textAlign","height","appStyle","backgroundColor","color","direction"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport { useState, useEffect, useRef } from 'react'\nimport axios from 'axios';\nimport AppBar from'./components/AppBar'\nimport AppStepper from'./components/AppStepper'\nimport Rating from'./components/Rating'\nimport HandleFile from'./components/file_handling/HandleFile'\nimport Container from '@mui/material/Container';\n\nconst adminMail = 'sadna2021mta@gmail.com'\n//default values to degree year and semester\nlet year = 1\nlet semester = 1\n\nconst scrollToRef = (ref) => ref.current.scrollIntoView({ behavior: 'smooth', block: 'center' })\n\nconst Text = \"Text\"\nconst Features = \"Features\"\n\nconst firstColor = \"#ffcc80\"\nconst secondColor = \"#80cbc4\"\n\nfunction App(){\n  const [classifyingType, setClassifyingType] = useState(Text)\n  const [accuracy, setAccuracy] = useState(0)\n  const [user, setUser] = useState(null)\n  const [isAdmin, setIsAdmin] = useState(false)\n\n  const [themeColor, setThemeColor] = useState(firstColor)\n\n  const [showTextModalTable, setShowTextModalTable] = useState(false)\n  \n\n  const [mandatoryCourses, setMandatoryCourses] = useState(null)\n  const [electiveCourses, setElectiveCourses] = useState(null)\n  const [userHaveSchedulerData, setUserHaveSchedulerData] = useState(false)\n  const [publishedSchedulersData, setPublishedSchedulersData] = useState([])\n  const [sharedSchedulersData, setSharedSchedulersData] = useState([])\n\n  const [users, setUsers] = useState(null)\n\n  const [showKey, setShowKey] = useState('home')\n\n  useEffect(async () => {\n    /*\n    const schedulersDataRes = await fetch('/schedulersData')\n    const schedulersData = await schedulersDataRes.json()\n    console.log(\"Home Page schedulers: \", Object.values(schedulersData))\n    setPublishedSchedulersData(Object.values(schedulersData))\n\n    const usersRes = await fetch('/getUsersInfo')\n    const usersData = await usersRes.json()\n    console.log(Object.values(usersData))\n    setUsers(Object.values(usersData))\n    */\n  }, []);\n\n  const checkUserCoursesExists = async (uid) => {\n    var url = '/checkUserCourses/' + uid\n    const res = await fetch(url)\n    if(res.status === 200) //user database courses exists\n    {\n      console.log('User have courses.')\n      return true\n    }\n    if(res.status === 400)\n    {\n      return false\n    }\n  }\n\n  const checkUserSchedulerDataExists = async (uid) => {\n    var url = '/checkUserScheduleData/' + uid\n    const res = await fetch(url)\n    if(res.status === 200) //user database exists\n    {\n      console.log('User have scheduler data.')\n      return true\n    }\n    else\n    {\n      return false\n    }\n  }\n\n  const checkSharedSchedulersDataExists = async (uid) => {\n    var url = '/checkSharedScheduleData/' + uid\n    const res = await fetch(url)\n    if(res.status === 200) //user database exists\n    {\n      console.log('Shared scheduler data to user.')\n      return true\n    }\n    else\n    {\n      return false\n    }\n  }\n\n  //fetch from user database courses\n  const fetchUserMandadtoryCourses = async (uid) => {\n    var url = '/mandatoryCourses/' + uid \n    const res = await fetch(url)\n    const data = await res.json()\n    console.log(\"user mandatory courses: \", data.mandatoryCourses)\n    setMandatoryCourses(data.mandatoryCourses)\n  }\n  const fetchUserElectiveCourses = async (uid) => {\n    var url = '/electiveCourses/' + uid \n    const res = await fetch(url)\n    const data = await res.json()\n    console.log(\"user elective courses: \", data.electiveCourses)\n    setElectiveCourses(data.electiveCourses)\n  }\n  const fetchSharedSchedulers = async (uid) => {\n    var url = '/sharedSchedulersData/' + uid \n    const schedulersDataRes = await fetch(url)\n    const schedulersData = await schedulersDataRes.json()\n    console.log(\"shared schedulers2: \", Object.values(schedulersData))\n    setSharedSchedulersData(Object.values(schedulersData))\n  }\n\n  //fetch from newsletter database courses\n  const fetchMCourses = async () => {\n    const url = '/mandatoryCourses'\n    const res = await fetch(url)\n    const data = await res.json()\n    // init: adding needed fields to each object\n    const result = data.mandatoryCourses.map((v, index) => ({...v,\n        done: false,\n        id: index,\n\t\t    courseType: 'Mandatory'\n    }));\n    console.log(\"Mandatory Courses: \", result)\n    setMandatoryCourses(result)\n    return result\n  }\n\n  const fetchECourses = async () => {\n    var url = '/electiveCourses'\n    const res = await fetch(url)\n    const data = await res.json()\n    //adding needed fields to each object\n    const result = data.electiveCourses.map((v, index) => ({...v,\n        done: false,\n        id: index,\n\t\t    courseType: 'Elective'\n    }));\n    console.log(\"Elective Courses: \", result)\n    setElectiveCourses(result)\n  }\n\n  const defaultCheckDoneCourses = (courses) => {\n    courses?.map(course => {\n      if(course.year < year || (course.year == year && (course.semesters[0] < semester || course.semesters.length === 2))) {\n        courses[course.id].done = true\n        console.log(course.title + \" done.\")\n      }\n    })\n  }\n\n  const checkMandatoryCourse = (e, id) => {\n    mandatoryCourses[id].done = !mandatoryCourses[id].done\n    console.log(mandatoryCourses[id].title + \": \" + mandatoryCourses[id].done)\n  }\n  const checkElectiveCourse = (e, id) => {\n    electiveCourses[id].done = !electiveCourses[id].done\n    console.log(electiveCourses[id].title + \": \" + electiveCourses[id].done)\n  }\n\n  const updateUserDatabase = async () => {\n    const url = '/updateUserDatabase/' + user.uid\n    axios({\n      method: 'post',\n      url: url,\n      data: {\n        mandatoryCourses: {mandatoryCourses},\n        electiveCourses: {electiveCourses}\n      }\n    });\n  }\n/*\n  const handleFileSubmit = async (formYear, formSemester) => {\n    //e.preventDefault()\n    year = formYear\n    semester = formSemester\n    var mandatoryCourses_ = await fetchMCourses()\n    await fetchECourses()\n    defaultCheckDoneCourses(mandatoryCourses_)\n    setShowKey('select')\n  }\n  */\n\n  const handleSelectCoursesSubmit = () => {\n    if(user != null)\n      updateUserDatabase()\n    window.scrollTo(0, 0)\n    setShowKey('schedule')\n  }\n\n  const onLogin = async (userFromLogin) => {\n    const uid = userFromLogin.uid\n    if(userFromLogin.email === adminMail)\n      setIsAdmin(true)\n    setUser(userFromLogin)\n    const userHaveCourses = await checkUserCoursesExists(uid)\n    const userHaveSchedulerData_ = await checkUserSchedulerDataExists(uid)\n    const userHaveSharedSchedulersData_ = await checkSharedSchedulersDataExists(uid)\n    var KeyIsSet = false;\n\n    if(userHaveSharedSchedulersData_)\n    {\n      setShowKey('share')\n      KeyIsSet = true\n      await fetchSharedSchedulers(uid)\n    }\n\n    if(userHaveSchedulerData_ && userHaveCourses)\n    {\n      if(!KeyIsSet)\n        setShowKey('schedule')\n      setUserHaveSchedulerData(true)\n      await fetchUserMandadtoryCourses(uid)\n      await fetchUserElectiveCourses(uid)\n    }\n    else if(userHaveCourses)\n    {\n      if(!KeyIsSet)\n      setShowKey('select')\n      await fetchUserMandadtoryCourses(uid)\n      await fetchUserElectiveCourses(uid)\n    }\n    else if(!KeyIsSet) //user doesn't have any data\n      setShowKey('upload')\n  }\n\n  const onLogout = () => {\n    console.log(\"LOGOUT\")\n\t  setIsAdmin(false)\n    setUser(null)\n\n    setMandatoryCourses(null)// delete later\n    setElectiveCourses(null)// delete later\n    setShowKey('home') // delete later\n  }\n\n  const handleFileSubmit = async (accuracy) => {\n    setAccuracy(accuracy)\n    console.log(\"Submitted file\")\n  }\n\n  const handleSwitch = (SwitchText) => {\n    setClassifyingType(SwitchText)\n    if(themeColor === firstColor)\n      setThemeColor(secondColor)\n    else\n      setThemeColor(firstColor)\n    console.log(SwitchText)\n  }\n\n  const startRef = useRef(null)\n  const executeUploadScroll = () => scrollToRef(startRef)\n\n\n  return ( \n    <div style={{fontFamily: 'Calibri'}}>\n      <Container sx={{width: \"90%\"}}>\n        <AppBar\n          handleStartClick={executeUploadScroll}\n        />\n        <br/><br/><br/><br/><br/>\n\n        <div class=\"content-top\" style={{padding: \"5rem\", textAlign: \"center\"}}>\n          <h3> CLSFY </h3>\n          Our goal is to make machine learning and artificial intelligence classifying algorithms accessible to the general public.\n          <hr/>\n          Login to save your trained model.\n          <hr/>\n          TODO: OnLogin, if have trained models, let user choose, open step3\n        </div>\n      </Container>\n\n        <div class=\"waves\" role=\"presentation\"></div>\n        <div class=\"content-bottom\" ref={startRef}>\n          <div style={{ height: 300 }} />\n          <AppStepper\n            firstStepComponent={<HandleFile/>}\n            secondStepComponent=\n            {\n              <>\n                <Rating value={(accuracy * 5)}/>\n                <hr/>\n                Model accuracy = {accuracy}\n                <hr/>\n                Add here comfusion matrix and all of the classes f1-scores.\n              </>\n            }\n          />\n          <div style={{ height: 300 }} />\n        </div>\n    </div>\n  );\n}\n\nconst appStyle = {\n  backgroundColor: '#444',\n  color: 'white',\n\tdirection: 'rtl',\n\ttextAlign: 'right',\n  }\n\nexport default App;"]},"metadata":{},"sourceType":"module"}