{"ast":null,"code":"var _jsxFileName = \"D:\\\\CLSFY\\\\src\\\\components\\\\ModelsCards.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport ModelCard from './ModelCard';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport CloseButton from 'react-bootstrap/CloseButton';\nimport ExampleButton from './show_example/ExampleButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ModelsCards = ({\n  uid,\n  modelsData\n}) => {\n  const handleModelSelection = async () => {\n    const url = 'models-data/' + uid;\n\n    try {\n      const res = await axios({\n        method: 'get',\n        url: url\n      });\n      console.log(res.data); //onModelSelection(objectId)\n    } catch (err) {\n      if (err.response.status === 500) {//setMessage(err.response.statusText)\n      } else if (err.response.status === 400) {//setMessage(err.response.statusText, \"Only Excel file allowed.\")\n      } else {}\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: 'center'\n    },\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      xs: 1,\n      md: 2,\n      lg: 3,\n      children: Array.from({\n        length: 4\n      }).map((_, idx) => /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(ModelCard, {\n          fileName: \"Zoo.xlsx\",\n          dataTime: \"12/12/2022\",\n          featuresNames: [\"Feature1\", \"Feature2\", \"Feature3\", \"Feature4\", \"Feature5\", \"Feature6\", \"Feature7\", \"Feature8\"],\n          onClick: handleModelSelection\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n\n_c = ModelsCards;\nexport default ModelsCards;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModelsCards\");","map":{"version":3,"sources":["D:/CLSFY/src/components/ModelsCards.js"],"names":["React","axios","ModelCard","Row","Col","Button","CloseButton","ExampleButton","ModelsCards","uid","modelsData","handleModelSelection","url","res","method","console","log","data","err","response","status","textAlign","Array","from","length","map","_","idx"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,WAAP,MAAwB,6BAAxB;AACA,OAAOC,aAAP,MAA0B,8BAA1B;;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAACC,EAAAA,GAAD;AAAMC,EAAAA;AAAN,CAAD,KAAuB;AACvC,QAAMC,oBAAoB,GAAG,YAAY;AACrC,UAAMC,GAAG,GAAG,iBAAiBH,GAA7B;;AACA,QAAI;AACA,YAAMI,GAAG,GAAG,MAAMZ,KAAK,CAAC;AACpBa,QAAAA,MAAM,EAAE,KADY;AAEpBF,QAAAA,GAAG,EAAEA;AAFe,OAAD,CAAvB;AAIAG,MAAAA,OAAO,CAACC,GAAR,CAAYH,GAAG,CAACI,IAAhB,EALA,CAMA;AACD,KAPH,CAQE,OAAOC,GAAP,EACA;AACE,UAAIA,GAAG,CAACC,QAAJ,CAAaC,MAAb,KAAwB,GAA5B,EACA,CACE;AACD,OAHD,MAIK,IAAIF,GAAG,CAACC,QAAJ,CAAaC,MAAb,KAAwB,GAA5B,EACL,CACE;AACD,OAHI,MAKL,CACC;AACF;AACN,GAxBD;;AA0BA,sBACI;AAAK,IAAA,KAAK,EAAE;AAACC,MAAAA,SAAS,EAAE;AAAZ,KAAZ;AAAA,2BACI,QAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAY,MAAA,EAAE,EAAE,CAAhB;AAAmB,MAAA,EAAE,EAAE,CAAvB;AAAA,gBACCC,KAAK,CAACC,IAAN,CAAW;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAAX,EAA0BC,GAA1B,CAA8B,CAACC,CAAD,EAAIC,GAAJ,kBAC3B,QAAC,GAAD;AAAA,+BACI,QAAC,SAAD;AACI,UAAA,QAAQ,EAAE,UADd;AAEI,UAAA,QAAQ,EAAE,YAFd;AAGI,UAAA,aAAa,EAAE,CAAC,UAAD,EAAa,UAAb,EAAyB,UAAzB,EAAqC,UAArC,EAAiD,UAAjD,EAA6D,UAA7D,EAAyE,UAAzE,EAAqF,UAArF,CAHnB;AAII,UAAA,OAAO,EAAEhB;AAJb;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADH;AADD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH,CA3CD;;KAAMH,W;AA6CN,eAAeA,WAAf","sourcesContent":["import React from 'react'\r\nimport axios from 'axios';\r\n\r\nimport ModelCard from './ModelCard'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Button from 'react-bootstrap/Button'\r\nimport CloseButton from 'react-bootstrap/CloseButton'\r\nimport ExampleButton from './show_example/ExampleButton'\r\n\r\nconst ModelsCards = ({uid, modelsData}) => {\r\n    const handleModelSelection = async () => {\r\n        const url = 'models-data/' + uid\r\n        try {\r\n            const res = await axios({\r\n                method: 'get',\r\n                url: url\r\n            });\r\n            console.log(res.data)\r\n            //onModelSelection(objectId)\r\n          } \r\n          catch (err) \r\n          {\r\n            if (err.response.status === 500)\r\n            {\r\n              //setMessage(err.response.statusText)\r\n            }\r\n            else if (err.response.status === 400)\r\n            {\r\n              //setMessage(err.response.statusText, \"Only Excel file allowed.\")\r\n            }\r\n            else \r\n            {\r\n            }\r\n          }\r\n    }\r\n\r\n    return (\r\n        <div style={{textAlign: 'center'}}>\r\n            <Row xs={1} md={2} lg={3}>\r\n            {Array.from({ length: 4 }).map((_, idx) => (\r\n                <Col>\r\n                    <ModelCard\r\n                        fileName={\"Zoo.xlsx\"} \r\n                        dataTime={\"12/12/2022\"} \r\n                        featuresNames={[\"Feature1\", \"Feature2\", \"Feature3\", \"Feature4\", \"Feature5\", \"Feature6\", \"Feature7\", \"Feature8\"]}\r\n                        onClick={handleModelSelection}\r\n                    />\r\n                </Col>\r\n            ))}\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ModelsCards\r\n"]},"metadata":{},"sourceType":"module"}