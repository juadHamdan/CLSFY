{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport axios from 'axios';\n\nconst HandleModels = () => {\n  _s();\n\n  const [modelsData, setModelsData] = useState(null);\n\n  const deleteModelFromDatabase = async (uid, modelIdToDelete) => {\n    const url = 'model/' + uid;\n\n    try {\n      const res = await axios({\n        method: 'delete',\n        url: url,\n        data: {\n          modelIdToDelete\n        }\n      });\n      console.log(res.data);\n    } catch (err) {\n      console.log(err.response.status);\n    }\n  };\n\n  const fetchModelsData = async uid => {\n    const url = 'models-data/' + uid;\n\n    try {\n      const res = await axios({\n        method: 'get',\n        url: url\n      });\n      console.log(\"modelsData: \", res.data);\n      setModelsData(res.data['models_data']);\n    } catch (err) {\n      console.log(err.response.status);\n    }\n  };\n\n  const deleteModelFromModelsData = modelIdToDelete => {\n    const newModelsData = modelsData.filter(modelData => modelData['id'] !== modelIdToDelete);\n    setModelsData(newModelsData);\n  };\n\n  const resetModelsData = () => {\n    setModelsData(null);\n  };\n\n  return {\n    modelsData,\n    fetchModelsData,\n    deleteModelFromModelsData,\n    deleteModelFromDatabase,\n    resetModelsData\n  };\n};\n\n_s(HandleModels, \"9BWVThP4XU6qdf23VNCn8Bg6Ox0=\");\n\n_c = HandleModels;\nexport default HandleModels;\n\nvar _c;\n\n$RefreshReg$(_c, \"HandleModels\");","map":{"version":3,"sources":["D:/CLSFYclone/CLSFY/src/HandleModels.js"],"names":["useState","axios","HandleModels","modelsData","setModelsData","deleteModelFromDatabase","uid","modelIdToDelete","url","res","method","data","console","log","err","response","status","fetchModelsData","deleteModelFromModelsData","newModelsData","filter","modelData","resetModelsData"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAGA,MAAMC,YAAY,GAAG,MAAM;AAAA;;AACvB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BJ,QAAQ,CAAC,IAAD,CAA5C;;AAEA,QAAMK,uBAAuB,GAAG,OAAOC,GAAP,EAAYC,eAAZ,KAAgC;AAC5D,UAAMC,GAAG,GAAG,WAAWF,GAAvB;;AACA,QAAI;AACA,YAAMG,GAAG,GAAG,MAAMR,KAAK,CAAC;AACpBS,QAAAA,MAAM,EAAE,QADY;AAEpBF,QAAAA,GAAG,EAAEA,GAFe;AAGpBG,QAAAA,IAAI,EAAC;AACLJ,UAAAA;AADK;AAHe,OAAD,CAAvB;AAOAK,MAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAG,CAACE,IAAhB;AACH,KATD,CAUA,OAAOG,GAAP,EACA;AACIF,MAAAA,OAAO,CAACC,GAAR,CAAYC,GAAG,CAACC,QAAJ,CAAaC,MAAzB;AACH;AACJ,GAhBD;;AAkBA,QAAMC,eAAe,GAAG,MAAOX,GAAP,IAAe;AACnC,UAAME,GAAG,GAAG,iBAAiBF,GAA7B;;AACA,QAAI;AACA,YAAMG,GAAG,GAAG,MAAMR,KAAK,CAAC;AACpBS,QAAAA,MAAM,EAAE,KADY;AAEpBF,QAAAA,GAAG,EAAEA;AAFe,OAAD,CAAvB;AAIAI,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BJ,GAAG,CAACE,IAAhC;AACAP,MAAAA,aAAa,CAACK,GAAG,CAACE,IAAJ,CAAS,aAAT,CAAD,CAAb;AACH,KAPD,CAQA,OAAOG,GAAP,EACA;AACIF,MAAAA,OAAO,CAACC,GAAR,CAAYC,GAAG,CAACC,QAAJ,CAAaC,MAAzB;AACH;AACJ,GAdD;;AAiBA,QAAME,yBAAyB,GAAIX,eAAD,IAAqB;AACnD,UAAMY,aAAa,GAAGhB,UAAU,CAACiB,MAAX,CAAkBC,SAAS,IAAIA,SAAS,CAAC,IAAD,CAAT,KAAoBd,eAAnD,CAAtB;AACAH,IAAAA,aAAa,CAACe,aAAD,CAAb;AACH,GAHD;;AAKA,QAAMG,eAAe,GAAG,MAAM;AAC1BlB,IAAAA,aAAa,CAAC,IAAD,CAAb;AACH,GAFD;;AAKA,SAAO;AAAED,IAAAA,UAAF;AAAcc,IAAAA,eAAd;AAA+BC,IAAAA,yBAA/B;AAA0Db,IAAAA,uBAA1D;AAAmFiB,IAAAA;AAAnF,GAAP;AACH,CAjDD;;GAAMpB,Y;;KAAAA,Y;AAmDN,eAAeA,YAAf","sourcesContent":["import { useState } from \"react\";\r\nimport axios from 'axios';\r\n\r\n\r\nconst HandleModels = () => {\r\n    const [modelsData, setModelsData] = useState(null)\r\n    \r\n    const deleteModelFromDatabase = async (uid, modelIdToDelete) => {\r\n        const url = 'model/' + uid\r\n        try {\r\n            const res = await axios({\r\n                method: 'delete',\r\n                url: url,\r\n                data:{\r\n                modelIdToDelete\r\n                }\r\n            });\r\n            console.log(res.data)\r\n        } \r\n        catch (err) \r\n        {\r\n            console.log(err.response.status)\r\n        }\r\n    }\r\n\r\n    const fetchModelsData = async (uid) => {\r\n        const url = 'models-data/' + uid\r\n        try {\r\n            const res = await axios({\r\n                method: 'get',\r\n                url: url\r\n            });\r\n            console.log(\"modelsData: \", res.data)\r\n            setModelsData(res.data['models_data'])\r\n        } \r\n        catch (err) \r\n        {\r\n            console.log(err.response.status)\r\n        }\r\n    }\r\n\r\n    \r\n    const deleteModelFromModelsData = (modelIdToDelete) => {\r\n        const newModelsData = modelsData.filter(modelData => modelData['id'] !== modelIdToDelete)\r\n        setModelsData(newModelsData)\r\n    }\r\n\r\n    const resetModelsData = () => {\r\n        setModelsData(null)\r\n    }\r\n\r\n\r\n    return { modelsData, fetchModelsData, deleteModelFromModelsData, deleteModelFromDatabase, resetModelsData }\r\n} \r\n\r\nexport default HandleModels"]},"metadata":{},"sourceType":"module"}