{"ast":null,"code":"var _jsxFileName = \"D:\\\\CLSFY\\\\src\\\\components\\\\handle_data_to_predict\\\\HandleFeaturesDataToPredict.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport Grid from '@mui/material/Grid';\nimport Container from '@mui/material/Container';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst HandleFeaturesDataToPredict = ({\n  features,\n  onSubmit\n}) => {\n  _s();\n\n  const [textValue, setTextValue] = useState(null);\n  const [textValueMessage, setTextValueMessage] = useState(\"\");\n  const [textValueError, setTextValueError] = useState(false);\n  const [classValue, setClassValue] = useState(null);\n  const [classValueMessage, setClassValueMessage] = useState(\"\");\n  const [classValueError, setClassValueError] = useState(\"\");\n\n  const handleSubmit = () => {\n    if (classValue === null || classValue === \"\") {\n      console.log(classValue);\n      setClassValueError(true);\n      setClassValueMessage(\"Empty Class\");\n      return;\n    }\n\n    if (textValue === null || textValue === \"\") {\n      console.log(textValue);\n      setTextValueError(true);\n      setClassValueMessage(\"Empty Text\");\n      return;\n    }\n  };\n\n  const handleTextChange = e => {\n    setTextValue(e.target.value);\n  };\n\n  const handleClassChange = e => {\n    setClassValue(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"md\",\n    sx: {\n      width: \"90%\"\n    },\n    children: [features.map((feature, index) => /*#__PURE__*/_jsxDEV(TextField, {\n      required: true,\n      lable: feature\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 47\n    }, this)), /*#__PURE__*/_jsxDEV(Box, {\n      component: \"form\",\n      noValidate: true,\n      autoComplete: \"off\",\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        required: true,\n        lable: \"1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 33\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 8,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            error: textValueError,\n            fullWidth: true,\n            label: \"Text\",\n            required: true,\n            helperText: textValueMessage,\n            onChange: handleTextChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 4,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            error: classValueError,\n            fullWidth: true,\n            required: true,\n            label: \"Class\",\n            helperText: classValueMessage,\n            onChange: handleClassChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleSubmit,\n        children: \"click\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n\n_s(HandleFeaturesDataToPredict, \"0liCYfO25xbJ68v4OMhSzLVvJJo=\");\n\n_c = HandleFeaturesDataToPredict;\nexport default HandleFeaturesDataToPredict;\n\nvar _c;\n\n$RefreshReg$(_c, \"HandleFeaturesDataToPredict\");","map":{"version":3,"sources":["D:/CLSFY/src/components/handle_data_to_predict/HandleFeaturesDataToPredict.js"],"names":["React","useState","Button","Box","TextField","Grid","Container","HandleFeaturesDataToPredict","features","onSubmit","textValue","setTextValue","textValueMessage","setTextValueMessage","textValueError","setTextValueError","classValue","setClassValue","classValueMessage","setClassValueMessage","classValueError","setClassValueError","handleSubmit","console","log","handleTextChange","e","target","value","handleClassChange","width","map","feature","index"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Box from '@mui/material/Box';\r\nimport TextField from '@mui/material/TextField';\r\nimport Grid from '@mui/material/Grid';\r\nimport Container from '@mui/material/Container';\r\n\r\nconst HandleFeaturesDataToPredict = ({features, onSubmit}) => {\r\n    const [textValue, setTextValue] = useState(null)\r\n    const [textValueMessage, setTextValueMessage] = useState(\"\")\r\n    const [textValueError, setTextValueError] = useState(false)\r\n\r\n    const [classValue, setClassValue] = useState(null)\r\n    const [classValueMessage, setClassValueMessage] = useState(\"\")\r\n    const [classValueError, setClassValueError] = useState(\"\")\r\n\r\n    const handleSubmit = () => {\r\n        if(classValue === null || classValue === \"\")\r\n        {\r\n            console.log(classValue)\r\n            setClassValueError(true)\r\n            setClassValueMessage(\"Empty Class\")\r\n            return\r\n        }\r\n        if(textValue === null || textValue === \"\")\r\n        {\r\n            console.log(textValue)\r\n            setTextValueError(true)\r\n            setClassValueMessage(\"Empty Text\")\r\n            return\r\n        }\r\n    }\r\n\r\n    const handleTextChange = e => {\r\n        setTextValue(e.target.value)\r\n    }\r\n\r\n    const handleClassChange = e => {\r\n        setClassValue(e.target.value)\r\n    }\r\n\r\n    return (\r\n        <Container maxWidth='md' sx={{width: \"90%\"}}>\r\n            {features.map((feature, index) => <TextField key={index} required lable={feature}/>)}\r\n\r\n\r\n\r\n            <Box\r\n                component=\"form\"\r\n                noValidate\r\n                autoComplete=\"off\"\r\n                >\r\n                                <TextField required lable=\"1\"/>\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={8}>\r\n                        <TextField\r\n                            error = {textValueError}\r\n                            fullWidth \r\n                            label=\"Text\"\r\n                            required\r\n                            helperText={textValueMessage}\r\n                            onChange={handleTextChange}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                        <TextField\r\n                            error = {classValueError}\r\n                            fullWidth \r\n                            required\r\n                            label=\"Class\"\r\n                            helperText={classValueMessage}\r\n                            onChange={handleClassChange}\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n                <Button onClick={handleSubmit}>click</Button>\r\n            </Box>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default HandleFeaturesDataToPredict"]},"metadata":{},"sourceType":"module"}