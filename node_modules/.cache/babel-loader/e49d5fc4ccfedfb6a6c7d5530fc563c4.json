{"ast":null,"code":"var _jsxFileName = \"D:\\\\CLSFYclone\\\\CLSFY\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './App.css';\nimport { useState, useRef } from 'react';\nimport HandleModels from './HandleModels';\nimport { v4 as uuidv4 } from 'uuid';\nimport { TextClassificationColor, TextString, FeaturesClassificationColor, FeaturesString } from './constants/Global';\nimport AppBar from './components/AppBar';\nimport About from './components/About';\nimport AppStepper from './components/AppStepper';\nimport HandleFile from './components/file_handling/HandleFile';\nimport ModelsCards from './components/ModelsCards';\nimport ScoresAndStats from './components/scores_and_stats/ScoresAndStats';\nimport HandleDataToPredict from './components/handle_data_to_predict/HandleDataToPredict';\nimport BackdropProgress from './components/BackdropProgress';\nimport Container from '@mui/material/Container';\nimport { Snackbar } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst uploadStep = 0;\nconst reportStep = 1;\nconst PredictStep = 2;\n\nconst scrollToRef = ref => ref.current.scrollIntoView({\n  behavior: 'smooth',\n  block: 'center'\n});\n\nfunction App() {\n  _s();\n\n  const [activeStep, setActiveStep] = useState(uploadStep);\n  const [themeColor, setThemeColor] = useState(TextClassificationColor);\n  const [classifyingType, setClassifyingType] = useState(TextString);\n  const [report, setReport] = useState({});\n  const [user, setUser] = useState(null);\n  const [uid, setUid] = useState(uuidv4()); //generate unique id for anonymous user\n\n  const [featuresLabels, setFeaturesLabels] = useState([]);\n  const [modelId, setModelId] = useState(null);\n  const [message, setMessage] = useState(null);\n  const [switchOn, setSwitchOn] = useState(false);\n  const [disableSwitch, setDisabledSwitch] = useState(false);\n  const [showBackdropProgress, setShowBackdropProgress] = useState(false);\n  const {\n    modelsData,\n    fetchModelsData,\n    deleteModelFromModelsData,\n    deleteModelFromDatabase,\n    resetModelsData\n  } = HandleModels();\n\n  const onLogin = async userFromLogin => {\n    setUser(userFromLogin);\n    setUid(userFromLogin.uid);\n    setShowBackdropProgress(true);\n    await fetchModelsData(userFromLogin.uid);\n    setShowBackdropProgress(false);\n  };\n\n  const onLogout = () => {\n    setUser(null);\n    resetModelsData();\n    executeScrollHome();\n    setActiveStep(uploadStep);\n  };\n\n  const onPredictFormSubmit = async predictedClass => {\n    console.log(predictedClass);\n  };\n\n  const onPredictFileSubmit = predictedClass => {\n    console.log(predictedClass);\n  };\n\n  const onFileSubmit = async data => {\n    setDisabledSwitch(true);\n    setActiveStep(reportStep);\n    setModelId(data['file_id']);\n    setReport(data['report']);\n    setFeaturesLabels(data['report']['features_labels']);\n    setMessage('Trained model saved.');\n  };\n\n  const handleSwitch = () => {\n    if (!switchOn) {\n      setClassifyingType(FeaturesString);\n      setThemeColor(FeaturesClassificationColor);\n    } else {\n      setClassifyingType(TextString);\n      setThemeColor(TextClassificationColor);\n    }\n\n    setSwitchOn(!switchOn);\n  };\n\n  const onModelSelection = (modelId, features, type) => {\n    if (type === TextString) {\n      setClassifyingType(TextString);\n      setThemeColor(TextClassificationColor);\n    } else {\n      setClassifyingType(FeaturesString);\n      setThemeColor(FeaturesClassificationColor);\n      setFeaturesLabels(features);\n    }\n\n    setModelId(modelId);\n    setActiveStep(PredictStep);\n    executeScrollStart();\n  };\n\n  const handleModelDelete = modelIdToDelete => {\n    deleteModelFromModelsData(modelIdToDelete);\n    deleteModelFromDatabase(uid, modelIdToDelete);\n    setMessage(\"Model deleted\");\n  };\n\n  const handleActiveSetChange = step => {\n    setActiveStep(step);\n  };\n\n  const homeRef = useRef(null);\n\n  const executeScrollHome = () => scrollToRef(homeRef);\n\n  const startRef = useRef(null);\n\n  const executeScrollStart = () => scrollToRef(startRef);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      fontFamily: 'Calibri light',\n      fontSize: '1.25rem'\n    },\n    children: [/*#__PURE__*/_jsxDEV(BackdropProgress, {\n      show: showBackdropProgress,\n      text: 'Checking For Saved Models...'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: message,\n      autoHideDuration: 6000,\n      onClose: () => setMessage(null),\n      message: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      ref: homeRef,\n      sx: {\n        width: \"90%\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(AppBar, {\n        user: user,\n        onLogin: onLogin,\n        onLogout: onLogout,\n        handleHomeClick: executeScrollHome,\n        handleStartClick: executeScrollStart\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: '10rem'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(About, {\n        user: user\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: '5rem'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), modelsData ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          style: {\n            textAlign: 'center'\n          },\n          children: \"Predict using saved models\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ModelsCards, {\n          modelsData: modelsData,\n          onModelSelection: onModelSelection,\n          handleModelDelete: handleModelDelete\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            height: '5rem'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"waves\",\n      role: \"presentation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-bottom\",\n      ref: startRef,\n      style: {\n        color: themeColor\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: '5rem'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AppStepper, {\n        activeStep: activeStep,\n        setActiveStep: handleActiveSetChange,\n        firstStepComponent: /*#__PURE__*/_jsxDEV(HandleFile, {\n          uid: uid,\n          onFileSubmit: onFileSubmit,\n          handleSwitch: handleSwitch,\n          switchOn: switchOn,\n          disableSwitch: disableSwitch,\n          classifyingType: classifyingType,\n          themeColor: themeColor\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 15\n        }, this),\n        secondStepComponent: /*#__PURE__*/_jsxDEV(ScoresAndStats, {\n          report: report\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 15\n        }, this),\n        thirdStepComponent: /*#__PURE__*/_jsxDEV(HandleDataToPredict, {\n          uid: uid,\n          classifyingType: classifyingType,\n          featuresLabels: featuresLabels,\n          onPredictFormSubmit: onPredictFormSubmit,\n          onPredictFileSubmit: onPredictFileSubmit,\n          modelId: modelId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: '10rem'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"bZBQVujBZfxcKyzjR3SbZnGVs2k=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/CLSFYclone/CLSFY/src/App.js"],"names":["React","useState","useRef","HandleModels","v4","uuidv4","TextClassificationColor","TextString","FeaturesClassificationColor","FeaturesString","AppBar","About","AppStepper","HandleFile","ModelsCards","ScoresAndStats","HandleDataToPredict","BackdropProgress","Container","Snackbar","uploadStep","reportStep","PredictStep","scrollToRef","ref","current","scrollIntoView","behavior","block","App","activeStep","setActiveStep","themeColor","setThemeColor","classifyingType","setClassifyingType","report","setReport","user","setUser","uid","setUid","featuresLabels","setFeaturesLabels","modelId","setModelId","message","setMessage","switchOn","setSwitchOn","disableSwitch","setDisabledSwitch","showBackdropProgress","setShowBackdropProgress","modelsData","fetchModelsData","deleteModelFromModelsData","deleteModelFromDatabase","resetModelsData","onLogin","userFromLogin","onLogout","executeScrollHome","onPredictFormSubmit","predictedClass","console","log","onPredictFileSubmit","onFileSubmit","data","handleSwitch","onModelSelection","features","type","executeScrollStart","handleModelDelete","modelIdToDelete","handleActiveSetChange","step","homeRef","startRef","fontFamily","fontSize","width","height","textAlign","color"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport './App.css';\r\nimport { useState, useRef } from 'react'\r\nimport HandleModels from './HandleModels'\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport { TextClassificationColor, TextString, FeaturesClassificationColor, FeaturesString } from './constants/Global'\r\nimport AppBar from'./components/AppBar'\r\nimport About from'./components/About'\r\nimport AppStepper from'./components/AppStepper'\r\n\r\nimport HandleFile from'./components/file_handling/HandleFile'\r\nimport ModelsCards from'./components/ModelsCards'\r\nimport ScoresAndStats from'./components/scores_and_stats/ScoresAndStats'\r\nimport HandleDataToPredict from './components/handle_data_to_predict/HandleDataToPredict'\r\nimport BackdropProgress from './components/BackdropProgress'\r\n\r\nimport Container from '@mui/material/Container';\r\nimport { Snackbar } from '@mui/material';\r\n\r\nconst uploadStep = 0\r\nconst reportStep = 1\r\nconst PredictStep = 2\r\n\r\nconst scrollToRef = (ref) => ref.current.scrollIntoView({ behavior: 'smooth', block: 'center' })\r\n\r\nfunction App()\r\n{\r\n  const [activeStep, setActiveStep] = useState(uploadStep)\r\n  const [themeColor, setThemeColor] = useState(TextClassificationColor)  \r\n  const [classifyingType, setClassifyingType] = useState(TextString)\r\n  const [report, setReport] = useState({})\r\n  const [user, setUser] = useState(null)\r\n  const [uid, setUid] = useState(uuidv4()) //generate unique id for anonymous user\r\n  const [featuresLabels, setFeaturesLabels] = useState([])\r\n  const [modelId, setModelId] = useState(null)\r\n  const [message, setMessage] = useState(null)\r\n  const [switchOn, setSwitchOn] = useState(false)\r\n  const [disableSwitch, setDisabledSwitch] = useState(false)\r\n  const [showBackdropProgress, setShowBackdropProgress] = useState(false)\r\n\r\n  const { modelsData, fetchModelsData, deleteModelFromModelsData, deleteModelFromDatabase, resetModelsData  } = HandleModels()\r\n\r\n  const onLogin = async (userFromLogin) => {\r\n    setUser(userFromLogin)\r\n    setUid(userFromLogin.uid)\r\n\r\n    setShowBackdropProgress(true)\r\n    await fetchModelsData(userFromLogin.uid)\r\n    setShowBackdropProgress(false)\r\n  }\r\n\r\n  const onLogout = () => {\r\n    setUser(null)\r\n    resetModelsData()\r\n    executeScrollHome()\r\n    setActiveStep(uploadStep)\r\n  }\r\n\r\n  const onPredictFormSubmit = async (predictedClass) => {\r\n    console.log(predictedClass)\r\n  }\r\n\r\n  const onPredictFileSubmit = (predictedClass) => {\r\n    console.log(predictedClass)\r\n  }\r\n\r\n  const onFileSubmit = async (data) => {\r\n    setDisabledSwitch(true)\r\n    setActiveStep(reportStep)\r\n    setModelId(data['file_id'])\r\n    setReport(data['report'])\r\n    setFeaturesLabels(data['report']['features_labels'])\r\n    setMessage('Trained model saved.')\r\n  }\r\n\r\n  const handleSwitch = () => {\r\n    if(!switchOn)\r\n    {\r\n      setClassifyingType(FeaturesString)\r\n      setThemeColor(FeaturesClassificationColor)\r\n    }\r\n    else\r\n    {\r\n      setClassifyingType(TextString)\r\n      setThemeColor(TextClassificationColor)\r\n    }\r\n    setSwitchOn(!switchOn)\r\n  }\r\n\r\n  const onModelSelection = (modelId, features, type) => {\r\n    if(type === TextString)\r\n    {\r\n      setClassifyingType(TextString)\r\n      setThemeColor(TextClassificationColor)\r\n    }\r\n    else\r\n    {\r\n      setClassifyingType(FeaturesString)\r\n      setThemeColor(FeaturesClassificationColor)\r\n      setFeaturesLabels(features)\r\n    }\r\n    setModelId(modelId)\r\n    setActiveStep(PredictStep)\r\n    executeScrollStart()\r\n  }\r\n\r\n  const handleModelDelete = (modelIdToDelete) => {\r\n    deleteModelFromModelsData(modelIdToDelete)\r\n    deleteModelFromDatabase(uid, modelIdToDelete)\r\n    setMessage(\"Model deleted\")\r\n  }\r\n\r\n  const handleActiveSetChange = (step) => {\r\n    setActiveStep(step)\r\n  }\r\n\r\n  const homeRef = useRef(null)\r\n  const executeScrollHome = () => scrollToRef(homeRef)\r\n  const startRef = useRef(null)\r\n  const executeScrollStart = () => scrollToRef(startRef)\r\n\r\n  return ( \r\n    <div style={{fontFamily: 'Calibri light', fontSize: '1.25rem'}}>\r\n      <BackdropProgress \r\n        show={showBackdropProgress} \r\n        text={'Checking For Saved Models...'}\r\n      />\r\n\r\n      <Snackbar\r\n        open={message}\r\n        autoHideDuration={6000}\r\n        onClose={() => setMessage(null)}\r\n        message={message}\r\n      />\r\n\r\n\r\n      <Container ref={homeRef} sx={{width: \"90%\"}}>\r\n        <AppBar\r\n          user={user} \r\n          onLogin={onLogin} \r\n          onLogout={onLogout}\r\n          handleHomeClick={executeScrollHome}\r\n          handleStartClick={executeScrollStart}\r\n        />\r\n        <div style={{ height: '10rem' }} />\r\n        <About user={user}/>\r\n        <div style={{ height: '5rem' }} />\r\n        {modelsData?\r\n          <div style={{textAlign: 'center'}}>\r\n            <strong style={{textAlign: 'center'}}>Predict using saved models</strong>\r\n            <hr/>\r\n            <ModelsCards \r\n              modelsData={modelsData}\r\n              onModelSelection={onModelSelection}\r\n              handleModelDelete={handleModelDelete}\r\n            /> \r\n            <hr/>\r\n            <div style={{ height: '5rem' }} />\r\n          </div>\r\n        : null}\r\n      </Container>\r\n\r\n      <div className=\"waves\" role=\"presentation\"></div>\r\n      <div className=\"content-bottom\" ref={startRef} style={{color: themeColor}}>\r\n        <div style={{ height: '5rem' }} />\r\n          <AppStepper\r\n            activeStep={activeStep}\r\n            setActiveStep={handleActiveSetChange}\r\n            firstStepComponent={\r\n              <HandleFile \r\n                uid={uid}\r\n                onFileSubmit={onFileSubmit}\r\n                handleSwitch={handleSwitch}\r\n                switchOn={switchOn}\r\n                disableSwitch={disableSwitch}\r\n                classifyingType={classifyingType}\r\n                themeColor={themeColor}\r\n              />}\r\n            secondStepComponent={\r\n              <ScoresAndStats \r\n                report={report}\r\n              />}\r\n            thirdStepComponent={\r\n              <HandleDataToPredict \r\n                uid={uid}\r\n                classifyingType={classifyingType}\r\n                featuresLabels={featuresLabels}\r\n                onPredictFormSubmit={onPredictFormSubmit}\r\n                onPredictFileSubmit={onPredictFileSubmit}\r\n                modelId={modelId}\r\n              />}\r\n          />\r\n          <div style={{ height: '10rem' }} />\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}