{"ast":null,"code":"var _jsxFileName = \"D:\\\\CLSFY\\\\src\\\\components\\\\AppStepper.js\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Stepper from '@mui/material/Stepper';\nimport Step from '@mui/material/Step';\nimport StepLabel from '@mui/material/StepLabel';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst steps = ['Upload Excel File', 'Scores & Statistics', 'Predict New Data'];\n\nconst AppStepper = ({\n  firstStepComponent\n}) => {\n  _s();\n\n  const [activeStep, setActiveStep] = React.useState(0);\n  const [skipped, setSkipped] = React.useState(new Set());\n\n  const isStepSkipped = step => {\n    return skipped.has(step);\n  };\n\n  const handleNext = () => {\n    let newSkipped = skipped;\n\n    if (isStepSkipped(activeStep)) {\n      newSkipped = new Set(newSkipped.values());\n      newSkipped.delete(activeStep);\n    }\n\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n    setSkipped(newSkipped);\n  };\n\n  const handleBack = () => {\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      width: '100%'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Stepper, {\n      activeStep: activeStep,\n      alternativeLabel: true,\n      children: steps.map((label, index) => {\n        const stepProps = {};\n        const labelProps = {};\n\n        if (isStepSkipped(index)) {\n          stepProps.completed = false;\n        }\n\n        return /*#__PURE__*/_jsxDEV(Step, { ...stepProps,\n          children: /*#__PURE__*/_jsxDEV(StepLabel, { ...labelProps,\n            children: label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this)\n        }, label, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), activeStep === steps.length ? /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        sx: {\n          mt: 2,\n          mb: 1\n        },\n        children: \"All steps completed - you're finished\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          flexDirection: 'row',\n          pt: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            flex: '1 1 auto'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleReset,\n          children: \"Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        sx: {\n          mt: 2,\n          mb: 1\n        },\n        children: [\"Step \", activeStep + 1]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this), activeStep === 0 ? firstStepComponent : null, /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          flexDirection: 'row',\n          pt: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          color: \"inherit\",\n          disabled: activeStep === 0,\n          onClick: handleBack,\n          sx: {\n            mr: 1\n          },\n          children: \"Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            flex: '1 1 auto'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleNext,\n          children: activeStep === steps.length - 1 ? 'Finish' : 'Next'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AppStepper, \"JuSWJLI0nqo1O5LgEQqaFwB8IYc=\");\n\n_c = AppStepper;\nexport default AppStepper;\n\nvar _c;\n\n$RefreshReg$(_c, \"AppStepper\");","map":{"version":3,"sources":["D:/CLSFY/src/components/AppStepper.js"],"names":["React","Box","Stepper","Step","StepLabel","Button","Typography","steps","AppStepper","firstStepComponent","activeStep","setActiveStep","useState","skipped","setSkipped","Set","isStepSkipped","step","has","handleNext","newSkipped","values","delete","prevActiveStep","handleBack","handleReset","width","map","label","index","stepProps","labelProps","completed","length","mt","mb","display","flexDirection","pt","flex","mr"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Stepper from '@mui/material/Stepper';\r\nimport Step from '@mui/material/Step';\r\nimport StepLabel from '@mui/material/StepLabel';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nconst steps = ['Upload Excel File', 'Scores & Statistics', 'Predict New Data'];\r\n\r\nconst AppStepper = ({firstStepComponent}) => {\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n  const [skipped, setSkipped] = React.useState(new Set());\r\n\r\n  const isStepSkipped = (step) => {\r\n    return skipped.has(step);\r\n  };\r\n\r\n  const handleNext = () => {\r\n    let newSkipped = skipped;\r\n    if (isStepSkipped(activeStep)) {\r\n      newSkipped = new Set(newSkipped.values());\r\n      newSkipped.delete(activeStep);\r\n    }\r\n\r\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n    setSkipped(newSkipped);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setActiveStep(0);\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ width: '100%' }}>\r\n      <Stepper activeStep={activeStep} alternativeLabel>\r\n        {steps.map((label, index) => {\r\n          const stepProps = {};\r\n          const labelProps = {};\r\n          if (isStepSkipped(index)) {\r\n            stepProps.completed = false;\r\n          }\r\n          return (\r\n            <Step key={label} {...stepProps}>\r\n              <StepLabel {...labelProps}>{label}</StepLabel>\r\n            </Step>\r\n          );\r\n        })}\r\n      </Stepper>\r\n      {activeStep === steps.length ? (\r\n        <React.Fragment>\r\n          <Typography sx={{ mt: 2, mb: 1 }}>\r\n            All steps completed - you&apos;re finished\r\n          </Typography>\r\n          <Box sx={{ display: 'flex', flexDirection: 'row', pt: 2 }}>\r\n            <Box sx={{ flex: '1 1 auto' }} />\r\n            <Button onClick={handleReset}>Reset</Button>\r\n          </Box>\r\n        </React.Fragment>\r\n      ) : (\r\n        <React.Fragment>\r\n\r\n\r\n\r\n\r\n\r\n\r\n          <Typography sx={{ mt: 2, mb: 1 }}>Step {activeStep + 1}</Typography>\r\n        {activeStep === 0? firstStepComponent : null}\r\n\r\n\r\n\r\n\r\n\r\n          <Box sx={{ display: 'flex', flexDirection: 'row', pt: 2 }}>\r\n            <Button\r\n              color=\"inherit\"\r\n              disabled={activeStep === 0}\r\n              onClick={handleBack}\r\n              sx={{ mr: 1 }}\r\n            >\r\n              Back\r\n            </Button>\r\n            <Box sx={{ flex: '1 1 auto' }} />\r\n            <Button onClick={handleNext}>\r\n              {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\r\n            </Button>\r\n          </Box>\r\n        </React.Fragment>\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default AppStepper;\r\n"]},"metadata":{},"sourceType":"module"}